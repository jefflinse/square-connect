// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// LoyaltyProgramRewardDefinitionType The type of discount the reward tier offers. DEPRECATED at version 2020-12-16. Discount details
// are now defined using a catalog pricing rule and other catalog objects. For more information, see
// [Get discount details for the reward](https://developer.squareup.com/docs/docs/loyalty-api/overview#get-discount-details).
//
// swagger:model LoyaltyProgramRewardDefinitionType
type LoyaltyProgramRewardDefinitionType string

const (

	// LoyaltyProgramRewardDefinitionTypeFIXEDAMOUNT captures enum value "FIXED_AMOUNT"
	LoyaltyProgramRewardDefinitionTypeFIXEDAMOUNT LoyaltyProgramRewardDefinitionType = "FIXED_AMOUNT"

	// LoyaltyProgramRewardDefinitionTypeFIXEDPERCENTAGE captures enum value "FIXED_PERCENTAGE"
	LoyaltyProgramRewardDefinitionTypeFIXEDPERCENTAGE LoyaltyProgramRewardDefinitionType = "FIXED_PERCENTAGE"
)

// for schema
var loyaltyProgramRewardDefinitionTypeEnum []interface{}

func init() {
	var res []LoyaltyProgramRewardDefinitionType
	if err := json.Unmarshal([]byte(`["FIXED_AMOUNT","FIXED_PERCENTAGE"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		loyaltyProgramRewardDefinitionTypeEnum = append(loyaltyProgramRewardDefinitionTypeEnum, v)
	}
}

func (m LoyaltyProgramRewardDefinitionType) validateLoyaltyProgramRewardDefinitionTypeEnum(path, location string, value LoyaltyProgramRewardDefinitionType) error {
	if err := validate.EnumCase(path, location, value, loyaltyProgramRewardDefinitionTypeEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this loyalty program reward definition type
func (m LoyaltyProgramRewardDefinitionType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateLoyaltyProgramRewardDefinitionTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this loyalty program reward definition type based on context it is used
func (m LoyaltyProgramRewardDefinitionType) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
