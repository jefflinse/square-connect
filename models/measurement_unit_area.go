// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// MeasurementUnitArea Unit of area used to measure a quantity.
//
// swagger:model MeasurementUnitArea
type MeasurementUnitArea string

const (

	// MeasurementUnitAreaIMPERIALACRE captures enum value "IMPERIAL_ACRE"
	MeasurementUnitAreaIMPERIALACRE MeasurementUnitArea = "IMPERIAL_ACRE"

	// MeasurementUnitAreaIMPERIALSQUAREINCH captures enum value "IMPERIAL_SQUARE_INCH"
	MeasurementUnitAreaIMPERIALSQUAREINCH MeasurementUnitArea = "IMPERIAL_SQUARE_INCH"

	// MeasurementUnitAreaIMPERIALSQUAREFOOT captures enum value "IMPERIAL_SQUARE_FOOT"
	MeasurementUnitAreaIMPERIALSQUAREFOOT MeasurementUnitArea = "IMPERIAL_SQUARE_FOOT"

	// MeasurementUnitAreaIMPERIALSQUAREYARD captures enum value "IMPERIAL_SQUARE_YARD"
	MeasurementUnitAreaIMPERIALSQUAREYARD MeasurementUnitArea = "IMPERIAL_SQUARE_YARD"

	// MeasurementUnitAreaIMPERIALSQUAREMILE captures enum value "IMPERIAL_SQUARE_MILE"
	MeasurementUnitAreaIMPERIALSQUAREMILE MeasurementUnitArea = "IMPERIAL_SQUARE_MILE"

	// MeasurementUnitAreaMETRICSQUARECENTIMETER captures enum value "METRIC_SQUARE_CENTIMETER"
	MeasurementUnitAreaMETRICSQUARECENTIMETER MeasurementUnitArea = "METRIC_SQUARE_CENTIMETER"

	// MeasurementUnitAreaMETRICSQUAREMETER captures enum value "METRIC_SQUARE_METER"
	MeasurementUnitAreaMETRICSQUAREMETER MeasurementUnitArea = "METRIC_SQUARE_METER"

	// MeasurementUnitAreaMETRICSQUAREKILOMETER captures enum value "METRIC_SQUARE_KILOMETER"
	MeasurementUnitAreaMETRICSQUAREKILOMETER MeasurementUnitArea = "METRIC_SQUARE_KILOMETER"
)

// for schema
var measurementUnitAreaEnum []interface{}

func init() {
	var res []MeasurementUnitArea
	if err := json.Unmarshal([]byte(`["IMPERIAL_ACRE","IMPERIAL_SQUARE_INCH","IMPERIAL_SQUARE_FOOT","IMPERIAL_SQUARE_YARD","IMPERIAL_SQUARE_MILE","METRIC_SQUARE_CENTIMETER","METRIC_SQUARE_METER","METRIC_SQUARE_KILOMETER"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		measurementUnitAreaEnum = append(measurementUnitAreaEnum, v)
	}
}

func (m MeasurementUnitArea) validateMeasurementUnitAreaEnum(path, location string, value MeasurementUnitArea) error {
	if err := validate.EnumCase(path, location, value, measurementUnitAreaEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this measurement unit area
func (m MeasurementUnitArea) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateMeasurementUnitAreaEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this measurement unit area based on context it is used
func (m MeasurementUnitArea) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
