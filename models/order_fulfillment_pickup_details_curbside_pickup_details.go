// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// OrderFulfillmentPickupDetailsCurbsidePickupDetails Specific details for curbside pickup.
//
// swagger:model OrderFulfillmentPickupDetailsCurbsidePickupDetails
type OrderFulfillmentPickupDetailsCurbsidePickupDetails struct {

	// The [timestamp](#workingwithdates) in RFC3339 timestamp format, e.g., "2016-09-04T23:59:33.123Z",
	// indicating when the buyer arrived and is waiting for pickup.
	BuyerArrivedAt string `json:"buyer_arrived_at,omitempty"`

	// Specific details for curbside pickup, such as parking number, vehicle model, etc.
	// Max Length: 250
	CurbsideDetails string `json:"curbside_details,omitempty"`
}

// Validate validates this order fulfillment pickup details curbside pickup details
func (m *OrderFulfillmentPickupDetailsCurbsidePickupDetails) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCurbsideDetails(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *OrderFulfillmentPickupDetailsCurbsidePickupDetails) validateCurbsideDetails(formats strfmt.Registry) error {

	if swag.IsZero(m.CurbsideDetails) { // not required
		return nil
	}

	if err := validate.MaxLength("curbside_details", "body", string(m.CurbsideDetails), 250); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *OrderFulfillmentPickupDetailsCurbsidePickupDetails) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *OrderFulfillmentPickupDetailsCurbsidePickupDetails) UnmarshalBinary(b []byte) error {
	var res OrderFulfillmentPickupDetailsCurbsidePickupDetails
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
