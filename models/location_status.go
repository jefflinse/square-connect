// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// LocationStatus The status of the location, whether a location is active or inactive.
//
// swagger:model LocationStatus
type LocationStatus string

const (

	// LocationStatusACTIVE captures enum value "ACTIVE"
	LocationStatusACTIVE LocationStatus = "ACTIVE"

	// LocationStatusINACTIVE captures enum value "INACTIVE"
	LocationStatusINACTIVE LocationStatus = "INACTIVE"
)

// for schema
var locationStatusEnum []interface{}

func init() {
	var res []LocationStatus
	if err := json.Unmarshal([]byte(`["ACTIVE","INACTIVE"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		locationStatusEnum = append(locationStatusEnum, v)
	}
}

func (m LocationStatus) validateLocationStatusEnum(path, location string, value LocationStatus) error {
	if err := validate.Enum(path, location, value, locationStatusEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this location status
func (m LocationStatus) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateLocationStatusEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
