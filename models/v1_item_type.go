// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// V1ItemType v1 item type
//
// swagger:model V1ItemType
type V1ItemType string

const (

	// V1ItemTypeNORMAL captures enum value "NORMAL"
	V1ItemTypeNORMAL V1ItemType = "NORMAL"

	// V1ItemTypeGIFTCARD captures enum value "GIFT_CARD"
	V1ItemTypeGIFTCARD V1ItemType = "GIFT_CARD"

	// V1ItemTypeOTHER captures enum value "OTHER"
	V1ItemTypeOTHER V1ItemType = "OTHER"
)

// for schema
var v1ItemTypeEnum []interface{}

func init() {
	var res []V1ItemType
	if err := json.Unmarshal([]byte(`["NORMAL","GIFT_CARD","OTHER"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		v1ItemTypeEnum = append(v1ItemTypeEnum, v)
	}
}

func (m V1ItemType) validateV1ItemTypeEnum(path, location string, value V1ItemType) error {
	if err := validate.Enum(path, location, value, v1ItemTypeEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this v1 item type
func (m V1ItemType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateV1ItemTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
