// Code generated by go-swagger; DO NOT EDIT.

package labor

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewListTeamMemberWagesParams creates a new ListTeamMemberWagesParams object
// with the default values initialized.
func NewListTeamMemberWagesParams() *ListTeamMemberWagesParams {
	var ()
	return &ListTeamMemberWagesParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewListTeamMemberWagesParamsWithTimeout creates a new ListTeamMemberWagesParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewListTeamMemberWagesParamsWithTimeout(timeout time.Duration) *ListTeamMemberWagesParams {
	var ()
	return &ListTeamMemberWagesParams{

		timeout: timeout,
	}
}

// NewListTeamMemberWagesParamsWithContext creates a new ListTeamMemberWagesParams object
// with the default values initialized, and the ability to set a context for a request
func NewListTeamMemberWagesParamsWithContext(ctx context.Context) *ListTeamMemberWagesParams {
	var ()
	return &ListTeamMemberWagesParams{

		Context: ctx,
	}
}

// NewListTeamMemberWagesParamsWithHTTPClient creates a new ListTeamMemberWagesParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewListTeamMemberWagesParamsWithHTTPClient(client *http.Client) *ListTeamMemberWagesParams {
	var ()
	return &ListTeamMemberWagesParams{
		HTTPClient: client,
	}
}

/*ListTeamMemberWagesParams contains all the parameters to send to the API endpoint
for the list team member wages operation typically these are written to a http.Request
*/
type ListTeamMemberWagesParams struct {

	/*Cursor
	  Pointer to the next page of Employee Wage results to fetch.

	*/
	Cursor *string
	/*Limit
	  Maximum number of Team Member Wages to return per page. Can range between
	1 and 200. The default is the maximum at 200.

	*/
	Limit *int64
	/*TeamMemberID
	  Filter wages returned to only those that are associated with the
	specified team member.

	*/
	TeamMemberID *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the list team member wages params
func (o *ListTeamMemberWagesParams) WithTimeout(timeout time.Duration) *ListTeamMemberWagesParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the list team member wages params
func (o *ListTeamMemberWagesParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the list team member wages params
func (o *ListTeamMemberWagesParams) WithContext(ctx context.Context) *ListTeamMemberWagesParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the list team member wages params
func (o *ListTeamMemberWagesParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the list team member wages params
func (o *ListTeamMemberWagesParams) WithHTTPClient(client *http.Client) *ListTeamMemberWagesParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the list team member wages params
func (o *ListTeamMemberWagesParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithCursor adds the cursor to the list team member wages params
func (o *ListTeamMemberWagesParams) WithCursor(cursor *string) *ListTeamMemberWagesParams {
	o.SetCursor(cursor)
	return o
}

// SetCursor adds the cursor to the list team member wages params
func (o *ListTeamMemberWagesParams) SetCursor(cursor *string) {
	o.Cursor = cursor
}

// WithLimit adds the limit to the list team member wages params
func (o *ListTeamMemberWagesParams) WithLimit(limit *int64) *ListTeamMemberWagesParams {
	o.SetLimit(limit)
	return o
}

// SetLimit adds the limit to the list team member wages params
func (o *ListTeamMemberWagesParams) SetLimit(limit *int64) {
	o.Limit = limit
}

// WithTeamMemberID adds the teamMemberID to the list team member wages params
func (o *ListTeamMemberWagesParams) WithTeamMemberID(teamMemberID *string) *ListTeamMemberWagesParams {
	o.SetTeamMemberID(teamMemberID)
	return o
}

// SetTeamMemberID adds the teamMemberId to the list team member wages params
func (o *ListTeamMemberWagesParams) SetTeamMemberID(teamMemberID *string) {
	o.TeamMemberID = teamMemberID
}

// WriteToRequest writes these params to a swagger request
func (o *ListTeamMemberWagesParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Cursor != nil {

		// query param cursor
		var qrCursor string
		if o.Cursor != nil {
			qrCursor = *o.Cursor
		}
		qCursor := qrCursor
		if qCursor != "" {
			if err := r.SetQueryParam("cursor", qCursor); err != nil {
				return err
			}
		}

	}

	if o.Limit != nil {

		// query param limit
		var qrLimit int64
		if o.Limit != nil {
			qrLimit = *o.Limit
		}
		qLimit := swag.FormatInt64(qrLimit)
		if qLimit != "" {
			if err := r.SetQueryParam("limit", qLimit); err != nil {
				return err
			}
		}

	}

	if o.TeamMemberID != nil {

		// query param team_member_id
		var qrTeamMemberID string
		if o.TeamMemberID != nil {
			qrTeamMemberID = *o.TeamMemberID
		}
		qTeamMemberID := qrTeamMemberID
		if qTeamMemberID != "" {
			if err := r.SetQueryParam("team_member_id", qTeamMemberID); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
