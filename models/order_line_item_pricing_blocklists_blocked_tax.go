// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// OrderLineItemPricingBlocklistsBlockedTax A tax to block from applying to a line item. The tax must be
// identified by either `tax_uid` or `tax_catalog_object_id`, but not both.
//
// swagger:model OrderLineItemPricingBlocklistsBlockedTax
type OrderLineItemPricingBlocklistsBlockedTax struct {

	// The `catalog_object_id` of the tax that should be blocked.
	// Use this field to block catalog taxes. For ad-hoc taxes use the
	// `tax_uid` field.
	// Max Length: 192
	TaxCatalogObjectID string `json:"tax_catalog_object_id,omitempty"`

	// The `uid` of the tax that should be blocked. Use this field to block
	// ad-hoc taxes. For catalog taxes use the `tax_catalog_object_id` field.
	// Max Length: 60
	TaxUID string `json:"tax_uid,omitempty"`

	// Unique ID of the `BlockedTax` within the order.
	// Max Length: 60
	UID string `json:"uid,omitempty"`
}

// Validate validates this order line item pricing blocklists blocked tax
func (m *OrderLineItemPricingBlocklistsBlockedTax) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateTaxCatalogObjectID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTaxUID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateUID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *OrderLineItemPricingBlocklistsBlockedTax) validateTaxCatalogObjectID(formats strfmt.Registry) error {
	if swag.IsZero(m.TaxCatalogObjectID) { // not required
		return nil
	}

	if err := validate.MaxLength("tax_catalog_object_id", "body", m.TaxCatalogObjectID, 192); err != nil {
		return err
	}

	return nil
}

func (m *OrderLineItemPricingBlocklistsBlockedTax) validateTaxUID(formats strfmt.Registry) error {
	if swag.IsZero(m.TaxUID) { // not required
		return nil
	}

	if err := validate.MaxLength("tax_uid", "body", m.TaxUID, 60); err != nil {
		return err
	}

	return nil
}

func (m *OrderLineItemPricingBlocklistsBlockedTax) validateUID(formats strfmt.Registry) error {
	if swag.IsZero(m.UID) { // not required
		return nil
	}

	if err := validate.MaxLength("uid", "body", m.UID, 60); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this order line item pricing blocklists blocked tax based on context it is used
func (m *OrderLineItemPricingBlocklistsBlockedTax) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *OrderLineItemPricingBlocklistsBlockedTax) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *OrderLineItemPricingBlocklistsBlockedTax) UnmarshalBinary(b []byte) error {
	var res OrderLineItemPricingBlocklistsBlockedTax
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
