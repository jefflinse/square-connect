// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// CreateCustomerCardRequest Defines the fields that are included in the request body of a request
// to the CreateCustomerCard endpoint.
//
// swagger:model CreateCustomerCardRequest
type CreateCustomerCardRequest struct {

	// Address information for the card on file. Only the `postal_code`
	// field is required for payments in the US and Canada.
	BillingAddress *Address `json:"billing_address,omitempty"`

	// A card nonce representing the credit card to link to the customer.
	//
	// Card nonces are generated by the Square Payment Form when customers enter
	// their card information. See
	// [Embedding the payment form](https://developer.squareup.com/docs/payment-form/payment-form-walkthrough) for
	// more information.
	//
	// __NOTE:__ Card nonces generated by digital wallets (e.g., Apple Pay)
	// cannot be used to create a customer card.
	// Required: true
	CardNonce *string `json:"card_nonce"`

	// The full name printed on the credit card.
	CardholderName string `json:"cardholder_name,omitempty"`

	// An identifying token generated by `SqPaymentForm.verifyBuyer()`.
	// Verification tokens encapsulate customer device information and 3-D Secure
	// challenge results to indicate that Square has verified the buyer identity.
	VerificationToken string `json:"verification_token,omitempty"`
}

// Validate validates this create customer card request
func (m *CreateCustomerCardRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateBillingAddress(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateCardNonce(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CreateCustomerCardRequest) validateBillingAddress(formats strfmt.Registry) error {

	if swag.IsZero(m.BillingAddress) { // not required
		return nil
	}

	if m.BillingAddress != nil {
		if err := m.BillingAddress.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("billing_address")
			}
			return err
		}
	}

	return nil
}

func (m *CreateCustomerCardRequest) validateCardNonce(formats strfmt.Registry) error {

	if err := validate.Required("card_nonce", "body", m.CardNonce); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *CreateCustomerCardRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CreateCustomerCardRequest) UnmarshalBinary(b []byte) error {
	var res CreateCustomerCardRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
