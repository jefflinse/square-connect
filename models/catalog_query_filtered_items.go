// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// CatalogQueryFilteredItems catalog query filtered items
//
// swagger:model CatalogQueryFilteredItems
type CatalogQueryFilteredItems struct {

	// category ids
	CategoryIds []string `json:"category_ids"`

	// custom attribute filters
	CustomAttributeFilters []*CatalogQueryFilteredItemsCustomAttributeFilter `json:"custom_attribute_filters"`

	//
	// See [CatalogQueryFilteredItemsNullableAttribute](#type-catalogqueryfiltereditemsnullableattribute) for possible values
	DoesNotExist []string `json:"does_not_exist"`

	// enabled location ids
	EnabledLocationIds []string `json:"enabled_location_ids"`

	//
	// See [CatalogItemProductType](#type-catalogitemproducttype) for possible values
	ProductTypes []string `json:"product_types"`

	// search vendor code
	SearchVendorCode bool `json:"search_vendor_code,omitempty"`

	//
	// See [SortOrder](#type-sortorder) for possible values
	SortOrder string `json:"sort_order,omitempty"`

	//
	// See [CatalogQueryFilteredItemsStockLevel](#type-catalogqueryfiltereditemsstocklevel) for possible values
	StockLevels []string `json:"stock_levels"`

	// text filter
	TextFilter string `json:"text_filter,omitempty"`

	// vendor ids
	VendorIds []string `json:"vendor_ids"`
}

// Validate validates this catalog query filtered items
func (m *CatalogQueryFilteredItems) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCustomAttributeFilters(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CatalogQueryFilteredItems) validateCustomAttributeFilters(formats strfmt.Registry) error {

	if swag.IsZero(m.CustomAttributeFilters) { // not required
		return nil
	}

	for i := 0; i < len(m.CustomAttributeFilters); i++ {
		if swag.IsZero(m.CustomAttributeFilters[i]) { // not required
			continue
		}

		if m.CustomAttributeFilters[i] != nil {
			if err := m.CustomAttributeFilters[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("custom_attribute_filters" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *CatalogQueryFilteredItems) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CatalogQueryFilteredItems) UnmarshalBinary(b []byte) error {
	var res CatalogQueryFilteredItems
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
