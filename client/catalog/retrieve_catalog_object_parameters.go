// Code generated by go-swagger; DO NOT EDIT.

package catalog

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewRetrieveCatalogObjectParams creates a new RetrieveCatalogObjectParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewRetrieveCatalogObjectParams() *RetrieveCatalogObjectParams {
	return &RetrieveCatalogObjectParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewRetrieveCatalogObjectParamsWithTimeout creates a new RetrieveCatalogObjectParams object
// with the ability to set a timeout on a request.
func NewRetrieveCatalogObjectParamsWithTimeout(timeout time.Duration) *RetrieveCatalogObjectParams {
	return &RetrieveCatalogObjectParams{
		timeout: timeout,
	}
}

// NewRetrieveCatalogObjectParamsWithContext creates a new RetrieveCatalogObjectParams object
// with the ability to set a context for a request.
func NewRetrieveCatalogObjectParamsWithContext(ctx context.Context) *RetrieveCatalogObjectParams {
	return &RetrieveCatalogObjectParams{
		Context: ctx,
	}
}

// NewRetrieveCatalogObjectParamsWithHTTPClient creates a new RetrieveCatalogObjectParams object
// with the ability to set a custom HTTPClient for a request.
func NewRetrieveCatalogObjectParamsWithHTTPClient(client *http.Client) *RetrieveCatalogObjectParams {
	return &RetrieveCatalogObjectParams{
		HTTPClient: client,
	}
}

/* RetrieveCatalogObjectParams contains all the parameters to send to the API endpoint
   for the retrieve catalog object operation.

   Typically these are written to a http.Request.
*/
type RetrieveCatalogObjectParams struct {

	/* CatalogVersion.

	     Requests objects as of a specific version of the catalog. This allows you to retrieve historical
	versions of objects. The value to retrieve a specific version of an object can be found
	in the version field of `CatalogObject`s.

	     Format: int64
	*/
	CatalogVersion *int64

	/* IncludeRelatedObjects.

	     If `true`, the response will include additional objects that are related to the
	requested object, as follows:

	If the `object` field of the response contains a `CatalogItem`, its associated
	`CatalogCategory`, `CatalogTax`, `CatalogImage` and `CatalogModifierList` objects will
	be returned in the `related_objects` field of the response. If the `object` field of
	the response contains a `CatalogItemVariation`, its parent `CatalogItem` will be returned
	in the `related_objects` field of the response.

	Default value: `false`
	*/
	IncludeRelatedObjects *bool

	/* ObjectID.

	   The object ID of any type of catalog objects to be retrieved.
	*/
	ObjectID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the retrieve catalog object params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *RetrieveCatalogObjectParams) WithDefaults() *RetrieveCatalogObjectParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the retrieve catalog object params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *RetrieveCatalogObjectParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the retrieve catalog object params
func (o *RetrieveCatalogObjectParams) WithTimeout(timeout time.Duration) *RetrieveCatalogObjectParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the retrieve catalog object params
func (o *RetrieveCatalogObjectParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the retrieve catalog object params
func (o *RetrieveCatalogObjectParams) WithContext(ctx context.Context) *RetrieveCatalogObjectParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the retrieve catalog object params
func (o *RetrieveCatalogObjectParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the retrieve catalog object params
func (o *RetrieveCatalogObjectParams) WithHTTPClient(client *http.Client) *RetrieveCatalogObjectParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the retrieve catalog object params
func (o *RetrieveCatalogObjectParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithCatalogVersion adds the catalogVersion to the retrieve catalog object params
func (o *RetrieveCatalogObjectParams) WithCatalogVersion(catalogVersion *int64) *RetrieveCatalogObjectParams {
	o.SetCatalogVersion(catalogVersion)
	return o
}

// SetCatalogVersion adds the catalogVersion to the retrieve catalog object params
func (o *RetrieveCatalogObjectParams) SetCatalogVersion(catalogVersion *int64) {
	o.CatalogVersion = catalogVersion
}

// WithIncludeRelatedObjects adds the includeRelatedObjects to the retrieve catalog object params
func (o *RetrieveCatalogObjectParams) WithIncludeRelatedObjects(includeRelatedObjects *bool) *RetrieveCatalogObjectParams {
	o.SetIncludeRelatedObjects(includeRelatedObjects)
	return o
}

// SetIncludeRelatedObjects adds the includeRelatedObjects to the retrieve catalog object params
func (o *RetrieveCatalogObjectParams) SetIncludeRelatedObjects(includeRelatedObjects *bool) {
	o.IncludeRelatedObjects = includeRelatedObjects
}

// WithObjectID adds the objectID to the retrieve catalog object params
func (o *RetrieveCatalogObjectParams) WithObjectID(objectID string) *RetrieveCatalogObjectParams {
	o.SetObjectID(objectID)
	return o
}

// SetObjectID adds the objectId to the retrieve catalog object params
func (o *RetrieveCatalogObjectParams) SetObjectID(objectID string) {
	o.ObjectID = objectID
}

// WriteToRequest writes these params to a swagger request
func (o *RetrieveCatalogObjectParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.CatalogVersion != nil {

		// query param catalog_version
		var qrCatalogVersion int64

		if o.CatalogVersion != nil {
			qrCatalogVersion = *o.CatalogVersion
		}
		qCatalogVersion := swag.FormatInt64(qrCatalogVersion)
		if qCatalogVersion != "" {

			if err := r.SetQueryParam("catalog_version", qCatalogVersion); err != nil {
				return err
			}
		}
	}

	if o.IncludeRelatedObjects != nil {

		// query param include_related_objects
		var qrIncludeRelatedObjects bool

		if o.IncludeRelatedObjects != nil {
			qrIncludeRelatedObjects = *o.IncludeRelatedObjects
		}
		qIncludeRelatedObjects := swag.FormatBool(qrIncludeRelatedObjects)
		if qIncludeRelatedObjects != "" {

			if err := r.SetQueryParam("include_related_objects", qIncludeRelatedObjects); err != nil {
				return err
			}
		}
	}

	// path param object_id
	if err := r.SetPathParam("object_id", o.ObjectID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
