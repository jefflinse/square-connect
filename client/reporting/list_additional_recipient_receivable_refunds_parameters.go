// Code generated by go-swagger; DO NOT EDIT.

package reporting

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewListAdditionalRecipientReceivableRefundsParams creates a new ListAdditionalRecipientReceivableRefundsParams object
// with the default values initialized.
func NewListAdditionalRecipientReceivableRefundsParams() *ListAdditionalRecipientReceivableRefundsParams {
	var ()
	return &ListAdditionalRecipientReceivableRefundsParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewListAdditionalRecipientReceivableRefundsParamsWithTimeout creates a new ListAdditionalRecipientReceivableRefundsParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewListAdditionalRecipientReceivableRefundsParamsWithTimeout(timeout time.Duration) *ListAdditionalRecipientReceivableRefundsParams {
	var ()
	return &ListAdditionalRecipientReceivableRefundsParams{

		timeout: timeout,
	}
}

// NewListAdditionalRecipientReceivableRefundsParamsWithContext creates a new ListAdditionalRecipientReceivableRefundsParams object
// with the default values initialized, and the ability to set a context for a request
func NewListAdditionalRecipientReceivableRefundsParamsWithContext(ctx context.Context) *ListAdditionalRecipientReceivableRefundsParams {
	var ()
	return &ListAdditionalRecipientReceivableRefundsParams{

		Context: ctx,
	}
}

// NewListAdditionalRecipientReceivableRefundsParamsWithHTTPClient creates a new ListAdditionalRecipientReceivableRefundsParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewListAdditionalRecipientReceivableRefundsParamsWithHTTPClient(client *http.Client) *ListAdditionalRecipientReceivableRefundsParams {
	var ()
	return &ListAdditionalRecipientReceivableRefundsParams{
		HTTPClient: client,
	}
}

/*ListAdditionalRecipientReceivableRefundsParams contains all the parameters to send to the API endpoint
for the list additional recipient receivable refunds operation typically these are written to a http.Request
*/
type ListAdditionalRecipientReceivableRefundsParams struct {

	/*BeginTime
	  The beginning of the requested reporting period, in RFC 3339 format.

	See [Date ranges](#dateranges) for details on date inclusivity/exclusivity.

	Default value: The current time minus one year.

	*/
	BeginTime *string
	/*Cursor
	  A pagination cursor returned by a previous call to this endpoint.
	Provide this to retrieve the next set of results for your original query.

	See [Paginating results](#paginatingresults) for more information.

	*/
	Cursor *string
	/*EndTime
	  The end of the requested reporting period, in RFC 3339 format.

	See [Date ranges](#dateranges) for details on date inclusivity/exclusivity.

	Default value: The current time.

	*/
	EndTime *string
	/*LocationID
	  The ID of the location to list AdditionalRecipientReceivableRefunds for.

	*/
	LocationID string
	/*SortOrder
	  The order in which results are listed in the response (`ASC` for
	oldest first, `DESC` for newest first).

	Default value: `DESC`

	*/
	SortOrder *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the list additional recipient receivable refunds params
func (o *ListAdditionalRecipientReceivableRefundsParams) WithTimeout(timeout time.Duration) *ListAdditionalRecipientReceivableRefundsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the list additional recipient receivable refunds params
func (o *ListAdditionalRecipientReceivableRefundsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the list additional recipient receivable refunds params
func (o *ListAdditionalRecipientReceivableRefundsParams) WithContext(ctx context.Context) *ListAdditionalRecipientReceivableRefundsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the list additional recipient receivable refunds params
func (o *ListAdditionalRecipientReceivableRefundsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the list additional recipient receivable refunds params
func (o *ListAdditionalRecipientReceivableRefundsParams) WithHTTPClient(client *http.Client) *ListAdditionalRecipientReceivableRefundsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the list additional recipient receivable refunds params
func (o *ListAdditionalRecipientReceivableRefundsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBeginTime adds the beginTime to the list additional recipient receivable refunds params
func (o *ListAdditionalRecipientReceivableRefundsParams) WithBeginTime(beginTime *string) *ListAdditionalRecipientReceivableRefundsParams {
	o.SetBeginTime(beginTime)
	return o
}

// SetBeginTime adds the beginTime to the list additional recipient receivable refunds params
func (o *ListAdditionalRecipientReceivableRefundsParams) SetBeginTime(beginTime *string) {
	o.BeginTime = beginTime
}

// WithCursor adds the cursor to the list additional recipient receivable refunds params
func (o *ListAdditionalRecipientReceivableRefundsParams) WithCursor(cursor *string) *ListAdditionalRecipientReceivableRefundsParams {
	o.SetCursor(cursor)
	return o
}

// SetCursor adds the cursor to the list additional recipient receivable refunds params
func (o *ListAdditionalRecipientReceivableRefundsParams) SetCursor(cursor *string) {
	o.Cursor = cursor
}

// WithEndTime adds the endTime to the list additional recipient receivable refunds params
func (o *ListAdditionalRecipientReceivableRefundsParams) WithEndTime(endTime *string) *ListAdditionalRecipientReceivableRefundsParams {
	o.SetEndTime(endTime)
	return o
}

// SetEndTime adds the endTime to the list additional recipient receivable refunds params
func (o *ListAdditionalRecipientReceivableRefundsParams) SetEndTime(endTime *string) {
	o.EndTime = endTime
}

// WithLocationID adds the locationID to the list additional recipient receivable refunds params
func (o *ListAdditionalRecipientReceivableRefundsParams) WithLocationID(locationID string) *ListAdditionalRecipientReceivableRefundsParams {
	o.SetLocationID(locationID)
	return o
}

// SetLocationID adds the locationId to the list additional recipient receivable refunds params
func (o *ListAdditionalRecipientReceivableRefundsParams) SetLocationID(locationID string) {
	o.LocationID = locationID
}

// WithSortOrder adds the sortOrder to the list additional recipient receivable refunds params
func (o *ListAdditionalRecipientReceivableRefundsParams) WithSortOrder(sortOrder *string) *ListAdditionalRecipientReceivableRefundsParams {
	o.SetSortOrder(sortOrder)
	return o
}

// SetSortOrder adds the sortOrder to the list additional recipient receivable refunds params
func (o *ListAdditionalRecipientReceivableRefundsParams) SetSortOrder(sortOrder *string) {
	o.SortOrder = sortOrder
}

// WriteToRequest writes these params to a swagger request
func (o *ListAdditionalRecipientReceivableRefundsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.BeginTime != nil {

		// query param begin_time
		var qrBeginTime string
		if o.BeginTime != nil {
			qrBeginTime = *o.BeginTime
		}
		qBeginTime := qrBeginTime
		if qBeginTime != "" {
			if err := r.SetQueryParam("begin_time", qBeginTime); err != nil {
				return err
			}
		}

	}

	if o.Cursor != nil {

		// query param cursor
		var qrCursor string
		if o.Cursor != nil {
			qrCursor = *o.Cursor
		}
		qCursor := qrCursor
		if qCursor != "" {
			if err := r.SetQueryParam("cursor", qCursor); err != nil {
				return err
			}
		}

	}

	if o.EndTime != nil {

		// query param end_time
		var qrEndTime string
		if o.EndTime != nil {
			qrEndTime = *o.EndTime
		}
		qEndTime := qrEndTime
		if qEndTime != "" {
			if err := r.SetQueryParam("end_time", qEndTime); err != nil {
				return err
			}
		}

	}

	// path param location_id
	if err := r.SetPathParam("location_id", o.LocationID); err != nil {
		return err
	}

	if o.SortOrder != nil {

		// query param sort_order
		var qrSortOrder string
		if o.SortOrder != nil {
			qrSortOrder = *o.SortOrder
		}
		qSortOrder := qrSortOrder
		if qSortOrder != "" {
			if err := r.SetQueryParam("sort_order", qSortOrder); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
