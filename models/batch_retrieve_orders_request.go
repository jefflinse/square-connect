// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// BatchRetrieveOrdersRequest Defines the fields that are included in requests to the
// BatchRetrieveOrders endpoint.
// Example: {"request_body":{"location_id":"057P5VYJ4A5X1","order_ids":["CAISEM82RcpmcFBM0TfOyiHV3es","CAISENgvlJ6jLWAzERDzjyHVybY"]}}
//
// swagger:model BatchRetrieveOrdersRequest
type BatchRetrieveOrdersRequest struct {

	// The ID of the location for these orders. This field is optional: omit it to retrieve
	// orders within the scope of the current authorization's merchant ID.
	LocationID string `json:"location_id,omitempty"`

	// The IDs of the orders to retrieve. A maximum of 100 orders can be retrieved per request.
	// Required: true
	OrderIds []string `json:"order_ids"`
}

// Validate validates this batch retrieve orders request
func (m *BatchRetrieveOrdersRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateOrderIds(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *BatchRetrieveOrdersRequest) validateOrderIds(formats strfmt.Registry) error {

	if err := validate.Required("order_ids", "body", m.OrderIds); err != nil {
		return err
	}

	for i := 0; i < len(m.OrderIds); i++ {

		if err := validate.MinLength("order_ids"+"."+strconv.Itoa(i), "body", m.OrderIds[i], 1); err != nil {
			return err
		}

	}

	return nil
}

// ContextValidate validates this batch retrieve orders request based on context it is used
func (m *BatchRetrieveOrdersRequest) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *BatchRetrieveOrdersRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *BatchRetrieveOrdersRequest) UnmarshalBinary(b []byte) error {
	var res BatchRetrieveOrdersRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
