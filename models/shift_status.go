// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// ShiftStatus Enumerates the possible status of a `Shift`
//
// swagger:model ShiftStatus
type ShiftStatus string

const (

	// ShiftStatusOPEN captures enum value "OPEN"
	ShiftStatusOPEN ShiftStatus = "OPEN"

	// ShiftStatusCLOSED captures enum value "CLOSED"
	ShiftStatusCLOSED ShiftStatus = "CLOSED"
)

// for schema
var shiftStatusEnum []interface{}

func init() {
	var res []ShiftStatus
	if err := json.Unmarshal([]byte(`["OPEN","CLOSED"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		shiftStatusEnum = append(shiftStatusEnum, v)
	}
}

func (m ShiftStatus) validateShiftStatusEnum(path, location string, value ShiftStatus) error {
	if err := validate.Enum(path, location, value, shiftStatusEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this shift status
func (m ShiftStatus) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateShiftStatusEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
