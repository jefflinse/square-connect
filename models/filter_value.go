// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// FilterValue A filter to select resources based on an exact field value. For any given
// value, the value can only be in one property. Depending on the field, either
// all properties can be set or only a subset will be available.
//
// Refer to the documentation of the field.
//
// swagger:model FilterValue
type FilterValue struct {

	// A list of terms that must be present on the field of the resource.
	All []string `json:"all"`

	// A list of terms where at least one of them must be present on the
	// field of the resource.
	Any []string `json:"any"`

	// A list of terms that must not be present on the field the resource
	None []string `json:"none"`
}

// Validate validates this filter value
func (m *FilterValue) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this filter value based on context it is used
func (m *FilterValue) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *FilterValue) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *FilterValue) UnmarshalBinary(b []byte) error {
	var res FilterValue
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
