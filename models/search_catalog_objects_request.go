// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// SearchCatalogObjectsRequest search catalog objects request
// Example: {"request_body":{"limit":100,"object_types":["ITEM"],"query":{"prefix_query":{"attribute_name":"name","attribute_prefix":"tea"}}}}
//
// swagger:model SearchCatalogObjectsRequest
type SearchCatalogObjectsRequest struct {

	// Return objects modified after this [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates), in RFC 3339
	// format, e.g., `2016-09-04T23:59:33.123Z`. The timestamp is exclusive - objects with a
	// timestamp equal to `begin_time` will not be included in the response.
	BeginTime string `json:"begin_time,omitempty"`

	// The pagination cursor returned in the previous response. Leave unset for an initial request.
	// See [Pagination](https://developer.squareup.com/docs/basics/api101/pagination) for more information.
	Cursor string `json:"cursor,omitempty"`

	// If `true`, deleted objects will be included in the results. Deleted objects will have their
	// `is_deleted` field set to `true`.
	IncludeDeletedObjects bool `json:"include_deleted_objects,omitempty"`

	// If `true`, the response will include additional objects that are related to the
	// requested object, as follows:
	//
	// If a CatalogItem is returned in the object field of the response,
	// its associated CatalogCategory, CatalogTax objects,
	// CatalogImage objects and CatalogModifierList objects
	// will be included in the `related_objects` field of the response.
	//
	// If a CatalogItemVariation is returned in the object field of the
	// response, its parent CatalogItem will be included in the `related_objects` field of
	// the response.
	IncludeRelatedObjects bool `json:"include_related_objects,omitempty"`

	// A limit on the number of results to be returned in a single page. The limit is advisory -
	// the implementation may return more or fewer results. If the supplied limit is negative, zero, or
	// is higher than the maximum limit of 1,000, it will be ignored.
	Limit int64 `json:"limit,omitempty"`

	// The desired set of object types to appear in the search results.
	// See [CatalogObjectType](#type-catalogobjecttype) for possible values
	ObjectTypes []string `json:"object_types"`

	// A query to be used to filter or sort the results. If no query is specified, the entire catalog will be returned.
	Query *CatalogQuery `json:"query,omitempty"`
}

// Validate validates this search catalog objects request
func (m *SearchCatalogObjectsRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateQuery(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *SearchCatalogObjectsRequest) validateQuery(formats strfmt.Registry) error {
	if swag.IsZero(m.Query) { // not required
		return nil
	}

	if m.Query != nil {
		if err := m.Query.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("query")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this search catalog objects request based on the context it is used
func (m *SearchCatalogObjectsRequest) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateQuery(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *SearchCatalogObjectsRequest) contextValidateQuery(ctx context.Context, formats strfmt.Registry) error {

	if m.Query != nil {
		if err := m.Query.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("query")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *SearchCatalogObjectsRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *SearchCatalogObjectsRequest) UnmarshalBinary(b []byte) error {
	var res SearchCatalogObjectsRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
