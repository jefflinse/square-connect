// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// CustomerInclusionExclusion Indicates whether customers should be included in, or excluded from,
// the result set when they match the filtering criteria.
//
// swagger:model CustomerInclusionExclusion
type CustomerInclusionExclusion string

const (

	// CustomerInclusionExclusionINCLUDE captures enum value "INCLUDE"
	CustomerInclusionExclusionINCLUDE CustomerInclusionExclusion = "INCLUDE"

	// CustomerInclusionExclusionEXCLUDE captures enum value "EXCLUDE"
	CustomerInclusionExclusionEXCLUDE CustomerInclusionExclusion = "EXCLUDE"
)

// for schema
var customerInclusionExclusionEnum []interface{}

func init() {
	var res []CustomerInclusionExclusion
	if err := json.Unmarshal([]byte(`["INCLUDE","EXCLUDE"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		customerInclusionExclusionEnum = append(customerInclusionExclusionEnum, v)
	}
}

func (m CustomerInclusionExclusion) validateCustomerInclusionExclusionEnum(path, location string, value CustomerInclusionExclusion) error {
	if err := validate.Enum(path, location, value, customerInclusionExclusionEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this customer inclusion exclusion
func (m CustomerInclusionExclusion) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateCustomerInclusionExclusionEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
