// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// SearchCustomersResponse Defines the fields that are included in the response body of
// a request to the SearchCustomers endpoint.
//
// One of `errors` or `customers` is present in a given response (never both).
// Example: {"cursor":"9dpS093Uy12AzeE","customers":[{"address":{"address_line_1":"505 Electric Ave","address_line_2":"Suite 600","administrative_district_level_1":"NY","country":"US","locality":"New York","postal_code":"10003"},"created_at":"2018-01-23T20:21:54.859Z","creation_source":"THIRD_PARTY","email_address":"james.bond@example.com","family_name":"Bond","given_name":"James","group_ids":["545AXB44B4XXWMVQ4W8SBT3HHF"],"groups":[{"id":"545AXB44B4XXWMVQ4W8SBT3HHF","name":"Aviation Enthusiasts"},{"id":"1KB9JE5EGJXCW.REACHABLE","name":"Reachable"}],"id":"JDKYHBWT1D4F8MFH63DBMEN8Y4","phone_number":"1-212-555-4250","reference_id":"YOUR_REFERENCE_ID_2","segment_ids":["1KB9JE5EGJXCW.REACHABLE"],"updated_at":"2018-04-20T10:02:43.083Z"},{"address":{"address_line_1":"500 Electric Ave","address_line_2":"Suite 600","administrative_district_level_1":"NY","country":"US","locality":"New York","postal_code":"10003"},"created_at":"2018-01-30T14:10:54.859Z","creation_source":"THIRD_PARTY","email_address":"amelia.earhart@example.com","family_name":"Earhart","given_name":"Amelia","group_ids":["545AXB44B4XXWMVQ4W8SBT3HHF"],"groups":[{"id":"545AXB44B4XXWMVQ4W8SBT3HHF","name":"Aviation Enthusiasts"},{"id":"1KB9JE5EGJXCW.REACHABLE","name":"Reachable"}],"id":"JDKYHBWT1D4F8MFH63DBMEN8Y4","note":"a customer","phone_number":"1-212-555-4240","reference_id":"YOUR_REFERENCE_ID_1","segment_ids":["1KB9JE5EGJXCW.REACHABLE"],"updated_at":"2018-03-08T18:25:54.859Z"}]}
//
// swagger:model SearchCustomersResponse
type SearchCustomersResponse struct {

	// A pagination cursor that can be used during subsequent calls
	// to SearchCustomers to retrieve the next set of results associated
	// with the original query. Pagination cursors are only present when
	// a request succeeds and additional results are available.
	//
	// See the [Pagination guide](https://developer.squareup.com/docs/working-with-apis/pagination) for more information.
	Cursor string `json:"cursor,omitempty"`

	// An array of `Customer` objects that match a query.
	Customers []*Customer `json:"customers"`

	// Any errors that occurred during the request.
	Errors []*Error `json:"errors"`
}

// Validate validates this search customers response
func (m *SearchCustomersResponse) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCustomers(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateErrors(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *SearchCustomersResponse) validateCustomers(formats strfmt.Registry) error {
	if swag.IsZero(m.Customers) { // not required
		return nil
	}

	for i := 0; i < len(m.Customers); i++ {
		if swag.IsZero(m.Customers[i]) { // not required
			continue
		}

		if m.Customers[i] != nil {
			if err := m.Customers[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("customers" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *SearchCustomersResponse) validateErrors(formats strfmt.Registry) error {
	if swag.IsZero(m.Errors) { // not required
		return nil
	}

	for i := 0; i < len(m.Errors); i++ {
		if swag.IsZero(m.Errors[i]) { // not required
			continue
		}

		if m.Errors[i] != nil {
			if err := m.Errors[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("errors" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this search customers response based on the context it is used
func (m *SearchCustomersResponse) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateCustomers(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateErrors(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *SearchCustomersResponse) contextValidateCustomers(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(m.Customers); i++ {

		if m.Customers[i] != nil {
			if err := m.Customers[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("customers" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *SearchCustomersResponse) contextValidateErrors(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(m.Errors); i++ {

		if m.Errors[i] != nil {
			if err := m.Errors[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("errors" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *SearchCustomersResponse) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *SearchCustomersResponse) UnmarshalBinary(b []byte) error {
	var res SearchCustomersResponse
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
