// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// SearchSubscriptionsResponse Defines the fields that are included in the response from the
// [SearchSubscriptions](#endpoint-subscriptions-searchsubscriptions) endpoint.
// Example: {"subscriptions":[{"canceled_date":"2020-04-14","card_id":"ccof:mueUsvgajChmjEbp4GB","charged_through_date":"2020-05-14","created_at":"2020-08-03T21:53:10Z","customer_id":"CHFGVKYY8RSV93M5KCYTG4PN0G","id":"de86fc96-8664-474b-af1a-abbe59cacf0e","location_id":"S8GWD5R9QB376","paid_until_date":"2020-05-14","plan_id":"L3TJVDHVBEQEGQDEZL2JJM7R","start_date":"2020-04-14","status":"CANCELED","timezone":"UTC"},{"created_at":"2020-08-03T21:53:10Z","customer_id":"CHFGVKYY8RSV93M5KCYTG4PN0G","id":"56214fb2-cc85-47a1-93bc-44f3766bb56f","location_id":"S8GWD5R9QB376","plan_id":"6JHXF3B2CW3YKHDV4XEM674H","price_override_money":{"amount":100,"currency":"USD"},"start_date":"2020-08-01","status":"PENDING","tax_percentage":"5","timezone":"America/Los_Angeles","version":1594155459464},{"charged_through_date":"2020-06-11","created_at":"2020-08-03T21:53:10Z","customer_id":"CHFGVKYY8RSV93M5KCYTG4PN0G","id":"8151fc89-da15-4eb9-a685-1a70883cebfc","invoice_ids":["grebK0Q_l8H4fqoMMVvt-Q","rcX_i3sNmHTGKhI4W2mceA"],"location_id":"S8GWD5R9QB376","paid_until_date":"2020-06-11","plan_id":"6JHXF3B2CW3YKHDV4XEM674H","price_override_money":{"amount":1000,"currency":"USD"},"start_date":"2020-05-11","status":"ACTIVE","timezone":"America/Los_Angeles"}]}
//
// swagger:model SearchSubscriptionsResponse
type SearchSubscriptionsResponse struct {

	// When a response is truncated, it includes a cursor that you can
	// use in a subsequent request to fetch the next set of subscriptions.
	// If empty, this is the final response.
	//
	// For more information, see [Pagination](https://developer.squareup.com/docs/docs/working-with-apis/pagination).
	Cursor string `json:"cursor,omitempty"`

	// Information about errors encountered during the request.
	Errors []*Error `json:"errors"`

	// The search result.
	Subscriptions []*Subscription `json:"subscriptions"`
}

// Validate validates this search subscriptions response
func (m *SearchSubscriptionsResponse) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateErrors(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSubscriptions(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *SearchSubscriptionsResponse) validateErrors(formats strfmt.Registry) error {
	if swag.IsZero(m.Errors) { // not required
		return nil
	}

	for i := 0; i < len(m.Errors); i++ {
		if swag.IsZero(m.Errors[i]) { // not required
			continue
		}

		if m.Errors[i] != nil {
			if err := m.Errors[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("errors" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *SearchSubscriptionsResponse) validateSubscriptions(formats strfmt.Registry) error {
	if swag.IsZero(m.Subscriptions) { // not required
		return nil
	}

	for i := 0; i < len(m.Subscriptions); i++ {
		if swag.IsZero(m.Subscriptions[i]) { // not required
			continue
		}

		if m.Subscriptions[i] != nil {
			if err := m.Subscriptions[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("subscriptions" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this search subscriptions response based on the context it is used
func (m *SearchSubscriptionsResponse) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateErrors(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateSubscriptions(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *SearchSubscriptionsResponse) contextValidateErrors(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(m.Errors); i++ {

		if m.Errors[i] != nil {
			if err := m.Errors[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("errors" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *SearchSubscriptionsResponse) contextValidateSubscriptions(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(m.Subscriptions); i++ {

		if m.Subscriptions[i] != nil {
			if err := m.Subscriptions[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("subscriptions" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *SearchSubscriptionsResponse) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *SearchSubscriptionsResponse) UnmarshalBinary(b []byte) error {
	var res SearchSubscriptionsResponse
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
