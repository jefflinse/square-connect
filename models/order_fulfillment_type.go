// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// OrderFulfillmentType The type of fulfillment.
//
// swagger:model OrderFulfillmentType
type OrderFulfillmentType string

const (

	// OrderFulfillmentTypePICKUP captures enum value "PICKUP"
	OrderFulfillmentTypePICKUP OrderFulfillmentType = "PICKUP"

	// OrderFulfillmentTypeSHIPMENT captures enum value "SHIPMENT"
	OrderFulfillmentTypeSHIPMENT OrderFulfillmentType = "SHIPMENT"
)

// for schema
var orderFulfillmentTypeEnum []interface{}

func init() {
	var res []OrderFulfillmentType
	if err := json.Unmarshal([]byte(`["PICKUP","SHIPMENT"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		orderFulfillmentTypeEnum = append(orderFulfillmentTypeEnum, v)
	}
}

func (m OrderFulfillmentType) validateOrderFulfillmentTypeEnum(path, location string, value OrderFulfillmentType) error {
	if err := validate.EnumCase(path, location, value, orderFulfillmentTypeEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this order fulfillment type
func (m OrderFulfillmentType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateOrderFulfillmentTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this order fulfillment type based on context it is used
func (m OrderFulfillmentType) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
