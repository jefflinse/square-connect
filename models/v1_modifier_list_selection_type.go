// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// V1ModifierListSelectionType v1 modifier list selection type
//
// swagger:model V1ModifierListSelectionType
type V1ModifierListSelectionType string

const (

	// V1ModifierListSelectionTypeSINGLE captures enum value "SINGLE"
	V1ModifierListSelectionTypeSINGLE V1ModifierListSelectionType = "SINGLE"

	// V1ModifierListSelectionTypeMULTIPLE captures enum value "MULTIPLE"
	V1ModifierListSelectionTypeMULTIPLE V1ModifierListSelectionType = "MULTIPLE"
)

// for schema
var v1ModifierListSelectionTypeEnum []interface{}

func init() {
	var res []V1ModifierListSelectionType
	if err := json.Unmarshal([]byte(`["SINGLE","MULTIPLE"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		v1ModifierListSelectionTypeEnum = append(v1ModifierListSelectionTypeEnum, v)
	}
}

func (m V1ModifierListSelectionType) validateV1ModifierListSelectionTypeEnum(path, location string, value V1ModifierListSelectionType) error {
	if err := validate.Enum(path, location, value, v1ModifierListSelectionTypeEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this v1 modifier list selection type
func (m V1ModifierListSelectionType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateV1ModifierListSelectionTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
