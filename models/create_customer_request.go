// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// CreateCustomerRequest Defines the body parameters that can be provided in a request to the
// CreateCustomer endpoint.
// Example: {"request_body":{"address":{"address_line_1":"500 Electric Ave","address_line_2":"Suite 600","administrative_district_level_1":"NY","country":"US","locality":"New York","postal_code":"10003"},"email_address":"Amelia.Earhart@example.com","family_name":"Earhart","given_name":"Amelia","note":"a customer","phone_number":"1-212-555-4240","reference_id":"YOUR_REFERENCE_ID"}}
//
// swagger:model CreateCustomerRequest
type CreateCustomerRequest struct {

	// The physical address associated with the customer profile.
	Address *Address `json:"address,omitempty"`

	// The birthday associated with the customer profile, in RFC 3339 format.
	// Year is optional, timezone and times are not allowed.
	// For example: `0000-09-01T00:00:00-00:00` indicates a birthday on September 1st.
	// `1998-09-01T00:00:00-00:00` indications a birthday on September 1st __1998__.
	Birthday string `json:"birthday,omitempty"`

	// A business name associated with the customer profile.
	CompanyName string `json:"company_name,omitempty"`

	// The email address associated with the customer profile.
	EmailAddress string `json:"email_address,omitempty"`

	// The family (i.e., last) name associated with the customer profile.
	FamilyName string `json:"family_name,omitempty"`

	// The given (i.e., first) name associated with the customer profile.
	GivenName string `json:"given_name,omitempty"`

	// The idempotency key for the request.	See the
	// [Idempotency](https://developer.squareup.com/docs/working-with-apis/idempotency) guide for more information.
	IdempotencyKey string `json:"idempotency_key,omitempty"`

	// A nickname for the customer profile.
	Nickname string `json:"nickname,omitempty"`

	// A custom note associated with the customer profile.
	Note string `json:"note,omitempty"`

	// The 11-digit phone number associated with the customer profile.
	PhoneNumber string `json:"phone_number,omitempty"`

	// An optional, second ID used to associate the customer profile with an
	// entity in another system.
	ReferenceID string `json:"reference_id,omitempty"`
}

// Validate validates this create customer request
func (m *CreateCustomerRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAddress(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CreateCustomerRequest) validateAddress(formats strfmt.Registry) error {
	if swag.IsZero(m.Address) { // not required
		return nil
	}

	if m.Address != nil {
		if err := m.Address.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("address")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this create customer request based on the context it is used
func (m *CreateCustomerRequest) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateAddress(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CreateCustomerRequest) contextValidateAddress(ctx context.Context, formats strfmt.Registry) error {

	if m.Address != nil {
		if err := m.Address.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("address")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *CreateCustomerRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CreateCustomerRequest) UnmarshalBinary(b []byte) error {
	var res CreateCustomerRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
