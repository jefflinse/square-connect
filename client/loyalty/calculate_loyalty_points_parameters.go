// Code generated by go-swagger; DO NOT EDIT.

package loyalty

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/jefflinse/square-connect/models"
)

// NewCalculateLoyaltyPointsParams creates a new CalculateLoyaltyPointsParams object
// with the default values initialized.
func NewCalculateLoyaltyPointsParams() *CalculateLoyaltyPointsParams {
	var ()
	return &CalculateLoyaltyPointsParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewCalculateLoyaltyPointsParamsWithTimeout creates a new CalculateLoyaltyPointsParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewCalculateLoyaltyPointsParamsWithTimeout(timeout time.Duration) *CalculateLoyaltyPointsParams {
	var ()
	return &CalculateLoyaltyPointsParams{

		timeout: timeout,
	}
}

// NewCalculateLoyaltyPointsParamsWithContext creates a new CalculateLoyaltyPointsParams object
// with the default values initialized, and the ability to set a context for a request
func NewCalculateLoyaltyPointsParamsWithContext(ctx context.Context) *CalculateLoyaltyPointsParams {
	var ()
	return &CalculateLoyaltyPointsParams{

		Context: ctx,
	}
}

// NewCalculateLoyaltyPointsParamsWithHTTPClient creates a new CalculateLoyaltyPointsParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewCalculateLoyaltyPointsParamsWithHTTPClient(client *http.Client) *CalculateLoyaltyPointsParams {
	var ()
	return &CalculateLoyaltyPointsParams{
		HTTPClient: client,
	}
}

/*CalculateLoyaltyPointsParams contains all the parameters to send to the API endpoint
for the calculate loyalty points operation typically these are written to a http.Request
*/
type CalculateLoyaltyPointsParams struct {

	/*Body
	  An object containing the fields to POST for the request.

	See the corresponding object definition for field details.

	*/
	Body *models.CalculateLoyaltyPointsRequest
	/*ProgramID
	  The `loyalty program` ID, which defines the rules for accruing points.

	*/
	ProgramID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the calculate loyalty points params
func (o *CalculateLoyaltyPointsParams) WithTimeout(timeout time.Duration) *CalculateLoyaltyPointsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the calculate loyalty points params
func (o *CalculateLoyaltyPointsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the calculate loyalty points params
func (o *CalculateLoyaltyPointsParams) WithContext(ctx context.Context) *CalculateLoyaltyPointsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the calculate loyalty points params
func (o *CalculateLoyaltyPointsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the calculate loyalty points params
func (o *CalculateLoyaltyPointsParams) WithHTTPClient(client *http.Client) *CalculateLoyaltyPointsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the calculate loyalty points params
func (o *CalculateLoyaltyPointsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBody adds the body to the calculate loyalty points params
func (o *CalculateLoyaltyPointsParams) WithBody(body *models.CalculateLoyaltyPointsRequest) *CalculateLoyaltyPointsParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the calculate loyalty points params
func (o *CalculateLoyaltyPointsParams) SetBody(body *models.CalculateLoyaltyPointsRequest) {
	o.Body = body
}

// WithProgramID adds the programID to the calculate loyalty points params
func (o *CalculateLoyaltyPointsParams) WithProgramID(programID string) *CalculateLoyaltyPointsParams {
	o.SetProgramID(programID)
	return o
}

// SetProgramID adds the programId to the calculate loyalty points params
func (o *CalculateLoyaltyPointsParams) SetProgramID(programID string) {
	o.ProgramID = programID
}

// WriteToRequest writes these params to a swagger request
func (o *CalculateLoyaltyPointsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Body != nil {
		if err := r.SetBodyParam(o.Body); err != nil {
			return err
		}
	}

	// path param program_id
	if err := r.SetPathParam("program_id", o.ProgramID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
