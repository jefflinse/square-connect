// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// CreateMobileAuthorizationCodeResponse Defines the fields that are included in the response body of
// a request to the __CreateMobileAuthorizationCode__ endpoint.
// Example: {"authorization_code":"YOUR_MOBILE_AUTHORIZATION_CODE","expires_at":"2019-01-10T19:42:08Z"}
//
// swagger:model CreateMobileAuthorizationCodeResponse
type CreateMobileAuthorizationCodeResponse struct {

	// Generated authorization code that connects a mobile application instance
	// to a Square account.
	AuthorizationCode string `json:"authorization_code,omitempty"`

	// An error object that provides details about how creation of authorization
	// code failed.
	Error *Error `json:"error,omitempty"`

	// The timestamp when `authorization_code` expires in
	// [RFC 3339](https://tools.ietf.org/html/rfc3339) format, e.g., "2016-09-04T23:59:33.123Z".
	ExpiresAt string `json:"expires_at,omitempty"`
}

// Validate validates this create mobile authorization code response
func (m *CreateMobileAuthorizationCodeResponse) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateError(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CreateMobileAuthorizationCodeResponse) validateError(formats strfmt.Registry) error {
	if swag.IsZero(m.Error) { // not required
		return nil
	}

	if m.Error != nil {
		if err := m.Error.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("error")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this create mobile authorization code response based on the context it is used
func (m *CreateMobileAuthorizationCodeResponse) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateError(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CreateMobileAuthorizationCodeResponse) contextValidateError(ctx context.Context, formats strfmt.Registry) error {

	if m.Error != nil {
		if err := m.Error.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("error")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *CreateMobileAuthorizationCodeResponse) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CreateMobileAuthorizationCodeResponse) UnmarshalBinary(b []byte) error {
	var res CreateMobileAuthorizationCodeResponse
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
