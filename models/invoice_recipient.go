// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// InvoiceRecipient Provides customer data that Square uses to deliver an invoice.
//
// swagger:model InvoiceRecipient
type InvoiceRecipient struct {

	// The recipient's physical address.
	Address *Address `json:"address,omitempty"`

	// The name of the recipient's company.
	CompanyName string `json:"company_name,omitempty"`

	// The ID of the customer. This is the customer profile ID that
	// you provide when creating a draft invoice.
	// Max Length: 255
	// Min Length: 1
	CustomerID string `json:"customer_id,omitempty"`

	// The recipient's email address.
	EmailAddress string `json:"email_address,omitempty"`

	// The recipient's family (that is, last) name.
	FamilyName string `json:"family_name,omitempty"`

	// The recipient's given (that is, first) name.
	GivenName string `json:"given_name,omitempty"`

	// The recipient's phone number.
	PhoneNumber string `json:"phone_number,omitempty"`
}

// Validate validates this invoice recipient
func (m *InvoiceRecipient) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAddress(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateCustomerID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *InvoiceRecipient) validateAddress(formats strfmt.Registry) error {

	if swag.IsZero(m.Address) { // not required
		return nil
	}

	if m.Address != nil {
		if err := m.Address.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("address")
			}
			return err
		}
	}

	return nil
}

func (m *InvoiceRecipient) validateCustomerID(formats strfmt.Registry) error {

	if swag.IsZero(m.CustomerID) { // not required
		return nil
	}

	if err := validate.MinLength("customer_id", "body", string(m.CustomerID), 1); err != nil {
		return err
	}

	if err := validate.MaxLength("customer_id", "body", string(m.CustomerID), 255); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *InvoiceRecipient) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *InvoiceRecipient) UnmarshalBinary(b []byte) error {
	var res InvoiceRecipient
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
