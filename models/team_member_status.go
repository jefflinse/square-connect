// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// TeamMemberStatus Enumerates the possible statuses the team member can have within a business.
//
// swagger:model TeamMemberStatus
type TeamMemberStatus string

const (

	// TeamMemberStatusACTIVE captures enum value "ACTIVE"
	TeamMemberStatusACTIVE TeamMemberStatus = "ACTIVE"

	// TeamMemberStatusINACTIVE captures enum value "INACTIVE"
	TeamMemberStatusINACTIVE TeamMemberStatus = "INACTIVE"
)

// for schema
var teamMemberStatusEnum []interface{}

func init() {
	var res []TeamMemberStatus
	if err := json.Unmarshal([]byte(`["ACTIVE","INACTIVE"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		teamMemberStatusEnum = append(teamMemberStatusEnum, v)
	}
}

func (m TeamMemberStatus) validateTeamMemberStatusEnum(path, location string, value TeamMemberStatus) error {
	if err := validate.Enum(path, location, value, teamMemberStatusEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this team member status
func (m TeamMemberStatus) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateTeamMemberStatusEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
