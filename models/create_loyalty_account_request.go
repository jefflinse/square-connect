// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// CreateLoyaltyAccountRequest A request to create a new loyalty account.
//
// swagger:model CreateLoyaltyAccountRequest
type CreateLoyaltyAccountRequest struct {

	// A unique string that identifies this `CreateLoyaltyAccount` request.
	// Keys can be any valid string, but must be unique for every request.
	// Required: true
	// Max Length: 128
	// Min Length: 1
	IdempotencyKey *string `json:"idempotency_key"`

	// The loyalty account to create.
	// Required: true
	LoyaltyAccount *LoyaltyAccount `json:"loyalty_account"`
}

// Validate validates this create loyalty account request
func (m *CreateLoyaltyAccountRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateIdempotencyKey(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLoyaltyAccount(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CreateLoyaltyAccountRequest) validateIdempotencyKey(formats strfmt.Registry) error {

	if err := validate.Required("idempotency_key", "body", m.IdempotencyKey); err != nil {
		return err
	}

	if err := validate.MinLength("idempotency_key", "body", string(*m.IdempotencyKey), 1); err != nil {
		return err
	}

	if err := validate.MaxLength("idempotency_key", "body", string(*m.IdempotencyKey), 128); err != nil {
		return err
	}

	return nil
}

func (m *CreateLoyaltyAccountRequest) validateLoyaltyAccount(formats strfmt.Registry) error {

	if err := validate.Required("loyalty_account", "body", m.LoyaltyAccount); err != nil {
		return err
	}

	if m.LoyaltyAccount != nil {
		if err := m.LoyaltyAccount.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("loyalty_account")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *CreateLoyaltyAccountRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CreateLoyaltyAccountRequest) UnmarshalBinary(b []byte) error {
	var res CreateLoyaltyAccountRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
