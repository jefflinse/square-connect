// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// CatalogQuickAmountType Determines the type of a specific Quick Amount.
//
// swagger:model CatalogQuickAmountType
type CatalogQuickAmountType string

const (

	// CatalogQuickAmountTypeQUICKAMOUNTTYPEMANUAL captures enum value "QUICK_AMOUNT_TYPE_MANUAL"
	CatalogQuickAmountTypeQUICKAMOUNTTYPEMANUAL CatalogQuickAmountType = "QUICK_AMOUNT_TYPE_MANUAL"

	// CatalogQuickAmountTypeQUICKAMOUNTTYPEAUTO captures enum value "QUICK_AMOUNT_TYPE_AUTO"
	CatalogQuickAmountTypeQUICKAMOUNTTYPEAUTO CatalogQuickAmountType = "QUICK_AMOUNT_TYPE_AUTO"
)

// for schema
var catalogQuickAmountTypeEnum []interface{}

func init() {
	var res []CatalogQuickAmountType
	if err := json.Unmarshal([]byte(`["QUICK_AMOUNT_TYPE_MANUAL","QUICK_AMOUNT_TYPE_AUTO"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		catalogQuickAmountTypeEnum = append(catalogQuickAmountTypeEnum, v)
	}
}

func (m CatalogQuickAmountType) validateCatalogQuickAmountTypeEnum(path, location string, value CatalogQuickAmountType) error {
	if err := validate.Enum(path, location, value, catalogQuickAmountTypeEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this catalog quick amount type
func (m CatalogQuickAmountType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateCatalogQuickAmountTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
