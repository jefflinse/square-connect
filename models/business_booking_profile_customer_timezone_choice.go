// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// BusinessBookingProfileCustomerTimezoneChoice Choices of customer-facing time zone used for bookings.
//
// swagger:model BusinessBookingProfileCustomerTimezoneChoice
type BusinessBookingProfileCustomerTimezoneChoice string

const (

	// BusinessBookingProfileCustomerTimezoneChoiceBUSINESSLOCATIONTIMEZONE captures enum value "BUSINESS_LOCATION_TIMEZONE"
	BusinessBookingProfileCustomerTimezoneChoiceBUSINESSLOCATIONTIMEZONE BusinessBookingProfileCustomerTimezoneChoice = "BUSINESS_LOCATION_TIMEZONE"

	// BusinessBookingProfileCustomerTimezoneChoiceCUSTOMERCHOICE captures enum value "CUSTOMER_CHOICE"
	BusinessBookingProfileCustomerTimezoneChoiceCUSTOMERCHOICE BusinessBookingProfileCustomerTimezoneChoice = "CUSTOMER_CHOICE"
)

// for schema
var businessBookingProfileCustomerTimezoneChoiceEnum []interface{}

func init() {
	var res []BusinessBookingProfileCustomerTimezoneChoice
	if err := json.Unmarshal([]byte(`["BUSINESS_LOCATION_TIMEZONE","CUSTOMER_CHOICE"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		businessBookingProfileCustomerTimezoneChoiceEnum = append(businessBookingProfileCustomerTimezoneChoiceEnum, v)
	}
}

func (m BusinessBookingProfileCustomerTimezoneChoice) validateBusinessBookingProfileCustomerTimezoneChoiceEnum(path, location string, value BusinessBookingProfileCustomerTimezoneChoice) error {
	if err := validate.EnumCase(path, location, value, businessBookingProfileCustomerTimezoneChoiceEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this business booking profile customer timezone choice
func (m BusinessBookingProfileCustomerTimezoneChoice) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateBusinessBookingProfileCustomerTimezoneChoiceEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this business booking profile customer timezone choice based on context it is used
func (m BusinessBookingProfileCustomerTimezoneChoice) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
