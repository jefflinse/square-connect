// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// CatalogCustomAttributeDefinitionNumberConfig catalog custom attribute definition number config
//
// swagger:model CatalogCustomAttributeDefinitionNumberConfig
type CatalogCustomAttributeDefinitionNumberConfig struct {

	// An integer between 0 and 5 that represents the maximum number of
	// positions allowed after the decimal in number custom attribute values
	// For example:
	//
	// - if the precision is 0, the quantity can be 1, 2, 3, etc.
	// - if the precision is 1, the quantity can be 0.1, 0.2, etc.
	// - if the precision is 2, the quantity can be 0.01, 0.12, etc.
	//
	// Default: 5
	// Maximum: 5
	// Minimum: 0
	Precision *int64 `json:"precision,omitempty"`
}

// Validate validates this catalog custom attribute definition number config
func (m *CatalogCustomAttributeDefinitionNumberConfig) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validatePrecision(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CatalogCustomAttributeDefinitionNumberConfig) validatePrecision(formats strfmt.Registry) error {

	if swag.IsZero(m.Precision) { // not required
		return nil
	}

	if err := validate.MinimumInt("precision", "body", int64(*m.Precision), 0, false); err != nil {
		return err
	}

	if err := validate.MaximumInt("precision", "body", int64(*m.Precision), 5, false); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *CatalogCustomAttributeDefinitionNumberConfig) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CatalogCustomAttributeDefinitionNumberConfig) UnmarshalBinary(b []byte) error {
	var res CatalogCustomAttributeDefinitionNumberConfig
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
