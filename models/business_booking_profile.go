// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// BusinessBookingProfile business booking profile
//
// swagger:model BusinessBookingProfile
type BusinessBookingProfile struct {

	// Indicates whether customers can cancel or reschedule their own bookings (`true`) or not (`false`).
	AllowUserCancel bool `json:"allow_user_cancel,omitempty"`

	// Indicates whether the seller is open for booking.
	BookingEnabled bool `json:"booking_enabled,omitempty"`

	// The policy for the seller to automatically accept booking requests (`ACCEPT_ALL`) or not (`REQUIRES_ACCEPTANCE`).
	// See [BusinessBookingProfileBookingPolicy](#type-businessbookingprofilebookingpolicy) for possible values
	BookingPolicy string `json:"booking_policy,omitempty"`

	// Settings for appointment-type bookings.
	BusinessAppointmentSettings *BusinessAppointmentSettings `json:"business_appointment_settings,omitempty"`

	// The RFC-3339 timestamp specifying the booking's creation time.
	CreatedAt string `json:"created_at,omitempty"`

	// The choice of customer's time zone information of a booking.
	// The Square online booking site and all notifications to customers uses either the seller locationâ€™s time zone
	// or the time zone the customer chooses at booking.
	// See [BusinessBookingProfileCustomerTimezoneChoice](#type-businessbookingprofilecustomertimezonechoice) for possible values
	CustomerTimezoneChoice string `json:"customer_timezone_choice,omitempty"`

	// The ID of the seller, obtainable using the Merchants API.
	SellerID string `json:"seller_id,omitempty"`
}

// Validate validates this business booking profile
func (m *BusinessBookingProfile) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateBusinessAppointmentSettings(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *BusinessBookingProfile) validateBusinessAppointmentSettings(formats strfmt.Registry) error {
	if swag.IsZero(m.BusinessAppointmentSettings) { // not required
		return nil
	}

	if m.BusinessAppointmentSettings != nil {
		if err := m.BusinessAppointmentSettings.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("business_appointment_settings")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this business booking profile based on the context it is used
func (m *BusinessBookingProfile) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateBusinessAppointmentSettings(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *BusinessBookingProfile) contextValidateBusinessAppointmentSettings(ctx context.Context, formats strfmt.Registry) error {

	if m.BusinessAppointmentSettings != nil {
		if err := m.BusinessAppointmentSettings.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("business_appointment_settings")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *BusinessBookingProfile) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *BusinessBookingProfile) UnmarshalBinary(b []byte) error {
	var res BusinessBookingProfile
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
