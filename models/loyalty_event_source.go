// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// LoyaltyEventSource Defines whether the event was generated by the Square Point of Sale.
//
// swagger:model LoyaltyEventSource
type LoyaltyEventSource string

const (

	// LoyaltyEventSourceSQUARE captures enum value "SQUARE"
	LoyaltyEventSourceSQUARE LoyaltyEventSource = "SQUARE"

	// LoyaltyEventSourceLOYALTYAPI captures enum value "LOYALTY_API"
	LoyaltyEventSourceLOYALTYAPI LoyaltyEventSource = "LOYALTY_API"
)

// for schema
var loyaltyEventSourceEnum []interface{}

func init() {
	var res []LoyaltyEventSource
	if err := json.Unmarshal([]byte(`["SQUARE","LOYALTY_API"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		loyaltyEventSourceEnum = append(loyaltyEventSourceEnum, v)
	}
}

func (m LoyaltyEventSource) validateLoyaltyEventSourceEnum(path, location string, value LoyaltyEventSource) error {
	if err := validate.EnumCase(path, location, value, loyaltyEventSourceEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this loyalty event source
func (m LoyaltyEventSource) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateLoyaltyEventSourceEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this loyalty event source based on context it is used
func (m LoyaltyEventSource) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
