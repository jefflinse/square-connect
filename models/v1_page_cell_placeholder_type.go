// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// V1PageCellPlaceholderType v1 page cell placeholder type
//
// swagger:model V1PageCellPlaceholderType
type V1PageCellPlaceholderType string

const (

	// V1PageCellPlaceholderTypeALLITEMS captures enum value "ALL_ITEMS"
	V1PageCellPlaceholderTypeALLITEMS V1PageCellPlaceholderType = "ALL_ITEMS"

	// V1PageCellPlaceholderTypeDISCOUNTSCATEGORY captures enum value "DISCOUNTS_CATEGORY"
	V1PageCellPlaceholderTypeDISCOUNTSCATEGORY V1PageCellPlaceholderType = "DISCOUNTS_CATEGORY"

	// V1PageCellPlaceholderTypeREWARDSFINDER captures enum value "REWARDS_FINDER"
	V1PageCellPlaceholderTypeREWARDSFINDER V1PageCellPlaceholderType = "REWARDS_FINDER"
)

// for schema
var v1PageCellPlaceholderTypeEnum []interface{}

func init() {
	var res []V1PageCellPlaceholderType
	if err := json.Unmarshal([]byte(`["ALL_ITEMS","DISCOUNTS_CATEGORY","REWARDS_FINDER"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		v1PageCellPlaceholderTypeEnum = append(v1PageCellPlaceholderTypeEnum, v)
	}
}

func (m V1PageCellPlaceholderType) validateV1PageCellPlaceholderTypeEnum(path, location string, value V1PageCellPlaceholderType) error {
	if err := validate.Enum(path, location, value, v1PageCellPlaceholderTypeEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this v1 page cell placeholder type
func (m V1PageCellPlaceholderType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateV1PageCellPlaceholderTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
