// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// RetrieveBusinessBookingProfileResponse retrieve business booking profile response
// Example: {"business_booking_profile":{"allow_user_cancel":true,"booking_enabled":true,"booking_policy":"ACCEPT_ALL","business_appointment_settings":{"alignment_time":"HALF_HOURLY","any_team_member_booking_enabled":true,"cancellation_fee_money":{"currency":"USD"},"cancellation_policy":"CUSTOM_POLICY","location_types":["BUSINESS_LOCATION"],"max_booking_lead_time_seconds":31536000,"min_booking_lead_time_seconds":0,"multiple_service_booking_enabled":true,"skip_booking_flow_staff_selection":false},"created_at":"2020-09-10T21:40:38Z","customer_timezone_choice":"CUSTOMER_CHOICE","seller_id":"MLJQYZZRM0D3Y"},"errors":[]}
//
// swagger:model RetrieveBusinessBookingProfileResponse
type RetrieveBusinessBookingProfileResponse struct {

	// The seller's booking profile.
	BusinessBookingProfile *BusinessBookingProfile `json:"business_booking_profile,omitempty"`

	// Any errors that occurred during the request.
	Errors []*Error `json:"errors"`
}

// Validate validates this retrieve business booking profile response
func (m *RetrieveBusinessBookingProfileResponse) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateBusinessBookingProfile(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateErrors(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *RetrieveBusinessBookingProfileResponse) validateBusinessBookingProfile(formats strfmt.Registry) error {
	if swag.IsZero(m.BusinessBookingProfile) { // not required
		return nil
	}

	if m.BusinessBookingProfile != nil {
		if err := m.BusinessBookingProfile.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("business_booking_profile")
			}
			return err
		}
	}

	return nil
}

func (m *RetrieveBusinessBookingProfileResponse) validateErrors(formats strfmt.Registry) error {
	if swag.IsZero(m.Errors) { // not required
		return nil
	}

	for i := 0; i < len(m.Errors); i++ {
		if swag.IsZero(m.Errors[i]) { // not required
			continue
		}

		if m.Errors[i] != nil {
			if err := m.Errors[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("errors" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this retrieve business booking profile response based on the context it is used
func (m *RetrieveBusinessBookingProfileResponse) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateBusinessBookingProfile(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateErrors(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *RetrieveBusinessBookingProfileResponse) contextValidateBusinessBookingProfile(ctx context.Context, formats strfmt.Registry) error {

	if m.BusinessBookingProfile != nil {
		if err := m.BusinessBookingProfile.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("business_booking_profile")
			}
			return err
		}
	}

	return nil
}

func (m *RetrieveBusinessBookingProfileResponse) contextValidateErrors(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(m.Errors); i++ {

		if m.Errors[i] != nil {
			if err := m.Errors[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("errors" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *RetrieveBusinessBookingProfileResponse) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *RetrieveBusinessBookingProfileResponse) UnmarshalBinary(b []byte) error {
	var res RetrieveBusinessBookingProfileResponse
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
