// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// LoyaltyProgramAccrualRuleType The type of the accrual rule that defines how buyers can earn points.
//
// swagger:model LoyaltyProgramAccrualRuleType
type LoyaltyProgramAccrualRuleType string

const (

	// LoyaltyProgramAccrualRuleTypeVISIT captures enum value "VISIT"
	LoyaltyProgramAccrualRuleTypeVISIT LoyaltyProgramAccrualRuleType = "VISIT"

	// LoyaltyProgramAccrualRuleTypeSPEND captures enum value "SPEND"
	LoyaltyProgramAccrualRuleTypeSPEND LoyaltyProgramAccrualRuleType = "SPEND"

	// LoyaltyProgramAccrualRuleTypeITEMVARIATION captures enum value "ITEM_VARIATION"
	LoyaltyProgramAccrualRuleTypeITEMVARIATION LoyaltyProgramAccrualRuleType = "ITEM_VARIATION"

	// LoyaltyProgramAccrualRuleTypeCATEGORY captures enum value "CATEGORY"
	LoyaltyProgramAccrualRuleTypeCATEGORY LoyaltyProgramAccrualRuleType = "CATEGORY"
)

// for schema
var loyaltyProgramAccrualRuleTypeEnum []interface{}

func init() {
	var res []LoyaltyProgramAccrualRuleType
	if err := json.Unmarshal([]byte(`["VISIT","SPEND","ITEM_VARIATION","CATEGORY"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		loyaltyProgramAccrualRuleTypeEnum = append(loyaltyProgramAccrualRuleTypeEnum, v)
	}
}

func (m LoyaltyProgramAccrualRuleType) validateLoyaltyProgramAccrualRuleTypeEnum(path, location string, value LoyaltyProgramAccrualRuleType) error {
	if err := validate.EnumCase(path, location, value, loyaltyProgramAccrualRuleTypeEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this loyalty program accrual rule type
func (m LoyaltyProgramAccrualRuleType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateLoyaltyProgramAccrualRuleTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this loyalty program accrual rule type based on context it is used
func (m LoyaltyProgramAccrualRuleType) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
