// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// V1OrderHistoryEntryAction v1 order history entry action
//
// swagger:model V1OrderHistoryEntryAction
type V1OrderHistoryEntryAction string

const (

	// V1OrderHistoryEntryActionORDERPLACED captures enum value "ORDER_PLACED"
	V1OrderHistoryEntryActionORDERPLACED V1OrderHistoryEntryAction = "ORDER_PLACED"

	// V1OrderHistoryEntryActionDECLINED captures enum value "DECLINED"
	V1OrderHistoryEntryActionDECLINED V1OrderHistoryEntryAction = "DECLINED"

	// V1OrderHistoryEntryActionPAYMENTRECEIVED captures enum value "PAYMENT_RECEIVED"
	V1OrderHistoryEntryActionPAYMENTRECEIVED V1OrderHistoryEntryAction = "PAYMENT_RECEIVED"

	// V1OrderHistoryEntryActionCANCELED captures enum value "CANCELED"
	V1OrderHistoryEntryActionCANCELED V1OrderHistoryEntryAction = "CANCELED"

	// V1OrderHistoryEntryActionCOMPLETED captures enum value "COMPLETED"
	V1OrderHistoryEntryActionCOMPLETED V1OrderHistoryEntryAction = "COMPLETED"

	// V1OrderHistoryEntryActionREFUNDED captures enum value "REFUNDED"
	V1OrderHistoryEntryActionREFUNDED V1OrderHistoryEntryAction = "REFUNDED"

	// V1OrderHistoryEntryActionEXPIRED captures enum value "EXPIRED"
	V1OrderHistoryEntryActionEXPIRED V1OrderHistoryEntryAction = "EXPIRED"
)

// for schema
var v1OrderHistoryEntryActionEnum []interface{}

func init() {
	var res []V1OrderHistoryEntryAction
	if err := json.Unmarshal([]byte(`["ORDER_PLACED","DECLINED","PAYMENT_RECEIVED","CANCELED","COMPLETED","REFUNDED","EXPIRED"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		v1OrderHistoryEntryActionEnum = append(v1OrderHistoryEntryActionEnum, v)
	}
}

func (m V1OrderHistoryEntryAction) validateV1OrderHistoryEntryActionEnum(path, location string, value V1OrderHistoryEntryAction) error {
	if err := validate.EnumCase(path, location, value, v1OrderHistoryEntryActionEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this v1 order history entry action
func (m V1OrderHistoryEntryAction) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateV1OrderHistoryEntryActionEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this v1 order history entry action based on context it is used
func (m V1OrderHistoryEntryAction) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
