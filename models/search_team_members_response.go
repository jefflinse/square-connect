// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// SearchTeamMembersResponse Represents a response from a search request, containing a filtered list of `TeamMember` objects.
// Example: {"cursor":"N:9UglUjOXQ13-hMFypCft","team_members":[{"assigned_locations":{"assignment_type":"ALL_CURRENT_AND_FUTURE_LOCATIONS"},"created_at":"2019-07-10T17:26:48Z","email_address":"johnny_cash@squareup.com","family_name":"Cash","given_name":"Johnny","id":"-3oZQKPKVk6gUXU_V5Qa","is_owner":false,"reference_id":"12345678","status":"ACTIVE","updated_at":"2020-04-28T21:49:28.957Z"},{"assigned_locations":{"assignment_type":"ALL_CURRENT_AND_FUTURE_LOCATIONS"},"created_at":"2020-03-24T18:14:01.127Z","family_name":"Smith","given_name":"Lombard","id":"1AVJj0DjkzbmbJw5r4KK","is_owner":false,"phone_number":"+14155552671","reference_id":"abcded","status":"ACTIVE","updated_at":"2020-06-09T17:38:05.423Z"},{"assigned_locations":{"assignment_type":"ALL_CURRENT_AND_FUTURE_LOCATIONS"},"created_at":"2020-03-24T01:09:25.010Z","family_name":"Sway","given_name":"Monica","id":"2JCmiJol_KKFs9z2Evim","is_owner":false,"status":"ACTIVE","updated_at":"2020-03-24T01:09:25.010Z"},{"assigned_locations":{"assignment_type":"ALL_CURRENT_AND_FUTURE_LOCATIONS"},"created_at":"2020-03-24T01:09:23.464Z","family_name":"Ipsum","given_name":"Elton","id":"4uXcJQSLtbk3F0UQHFNQ","is_owner":false,"status":"ACTIVE","updated_at":"2020-03-24T01:09:23.464Z"},{"assigned_locations":{"assignment_type":"ALL_CURRENT_AND_FUTURE_LOCATIONS"},"created_at":"2020-03-24T01:09:23.074Z","family_name":"Lo","given_name":"Steven","id":"5CoUpyrw1YwGWcRd-eDL","is_owner":false,"status":"ACTIVE","updated_at":"2020-03-24T01:09:23.074Z"},{"assigned_locations":{"assignment_type":"ALL_CURRENT_AND_FUTURE_LOCATIONS"},"created_at":"2020-03-24T18:14:03.865Z","email_address":"patrick_steward@gmail.com","family_name":"Steward","given_name":"Patrick","id":"5MRPTTp8MMBLVSmzrGha","is_owner":false,"phone_number":"+14155552671","status":"ACTIVE","updated_at":"2020-03-24T18:14:03.865Z"},{"assigned_locations":{"assignment_type":"ALL_CURRENT_AND_FUTURE_LOCATIONS"},"created_at":"2020-03-24T01:09:25.180Z","family_name":"Manny","given_name":"Ivy","id":"7F5ZxsfRnkexhu1PTbfh","is_owner":false,"status":"ACTIVE","updated_at":"2020-03-24T01:09:25.180Z"},{"assigned_locations":{"assignment_type":"ALL_CURRENT_AND_FUTURE_LOCATIONS"},"created_at":"2020-03-24T18:14:02.797Z","email_address":"john_smith@gmail.com","family_name":"Smith","given_name":"John","id":"808X9HR72yKvVaigQXf4","is_owner":false,"phone_number":"+14155552671","status":"ACTIVE","updated_at":"2020-03-24T18:14:02.797Z"},{"assigned_locations":{"assignment_type":"ALL_CURRENT_AND_FUTURE_LOCATIONS"},"created_at":"2020-03-24T18:14:00.399Z","email_address":"r_wen@gmail.com","family_name":"Wen","given_name":"Robert","id":"9MVDVoY4hazkWKGo_OuZ","is_owner":false,"phone_number":"+14155552671","status":"ACTIVE","updated_at":"2020-03-24T18:14:00.399Z"},{"assigned_locations":{"assignment_type":"ALL_CURRENT_AND_FUTURE_LOCATIONS"},"created_at":"2020-03-24T18:14:00.445Z","email_address":"asimpson@gmail.com","family_name":"Simpson","given_name":"Ashley","id":"9UglUjOXQ13-hMFypCft","is_owner":false,"phone_number":"+14155552671","status":"ACTIVE","updated_at":"2020-03-24T18:14:00.445Z"}]}
//
// swagger:model SearchTeamMembersResponse
type SearchTeamMembersResponse struct {

	// The opaque cursor for fetching the next page. Read about
	// [pagination](https://developer.squareup.com/docs/docs/working-with-apis/pagination) with Square APIs for more information.
	Cursor string `json:"cursor,omitempty"`

	// The errors that occurred during the request.
	Errors []*Error `json:"errors"`

	// The filtered list of `TeamMember` objects.
	TeamMembers []*TeamMember `json:"team_members"`
}

// Validate validates this search team members response
func (m *SearchTeamMembersResponse) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateErrors(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTeamMembers(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *SearchTeamMembersResponse) validateErrors(formats strfmt.Registry) error {
	if swag.IsZero(m.Errors) { // not required
		return nil
	}

	for i := 0; i < len(m.Errors); i++ {
		if swag.IsZero(m.Errors[i]) { // not required
			continue
		}

		if m.Errors[i] != nil {
			if err := m.Errors[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("errors" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *SearchTeamMembersResponse) validateTeamMembers(formats strfmt.Registry) error {
	if swag.IsZero(m.TeamMembers) { // not required
		return nil
	}

	for i := 0; i < len(m.TeamMembers); i++ {
		if swag.IsZero(m.TeamMembers[i]) { // not required
			continue
		}

		if m.TeamMembers[i] != nil {
			if err := m.TeamMembers[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("team_members" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this search team members response based on the context it is used
func (m *SearchTeamMembersResponse) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateErrors(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateTeamMembers(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *SearchTeamMembersResponse) contextValidateErrors(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(m.Errors); i++ {

		if m.Errors[i] != nil {
			if err := m.Errors[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("errors" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *SearchTeamMembersResponse) contextValidateTeamMembers(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(m.TeamMembers); i++ {

		if m.TeamMembers[i] != nil {
			if err := m.TeamMembers[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("team_members" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *SearchTeamMembersResponse) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *SearchTeamMembersResponse) UnmarshalBinary(b []byte) error {
	var res SearchTeamMembersResponse
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
