// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// V1VariationPricingType v1 variation pricing type
//
// swagger:model V1VariationPricingType
type V1VariationPricingType string

const (

	// V1VariationPricingTypeFIXEDPRICING captures enum value "FIXED_PRICING"
	V1VariationPricingTypeFIXEDPRICING V1VariationPricingType = "FIXED_PRICING"

	// V1VariationPricingTypeVARIABLEPRICING captures enum value "VARIABLE_PRICING"
	V1VariationPricingTypeVARIABLEPRICING V1VariationPricingType = "VARIABLE_PRICING"
)

// for schema
var v1VariationPricingTypeEnum []interface{}

func init() {
	var res []V1VariationPricingType
	if err := json.Unmarshal([]byte(`["FIXED_PRICING","VARIABLE_PRICING"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		v1VariationPricingTypeEnum = append(v1VariationPricingTypeEnum, v)
	}
}

func (m V1VariationPricingType) validateV1VariationPricingTypeEnum(path, location string, value V1VariationPricingType) error {
	if err := validate.Enum(path, location, value, v1VariationPricingTypeEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this v1 variation pricing type
func (m V1VariationPricingType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateV1VariationPricingTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
