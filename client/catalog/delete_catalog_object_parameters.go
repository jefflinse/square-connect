// Code generated by go-swagger; DO NOT EDIT.

package catalog

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewDeleteCatalogObjectParams creates a new DeleteCatalogObjectParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewDeleteCatalogObjectParams() *DeleteCatalogObjectParams {
	return &DeleteCatalogObjectParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewDeleteCatalogObjectParamsWithTimeout creates a new DeleteCatalogObjectParams object
// with the ability to set a timeout on a request.
func NewDeleteCatalogObjectParamsWithTimeout(timeout time.Duration) *DeleteCatalogObjectParams {
	return &DeleteCatalogObjectParams{
		timeout: timeout,
	}
}

// NewDeleteCatalogObjectParamsWithContext creates a new DeleteCatalogObjectParams object
// with the ability to set a context for a request.
func NewDeleteCatalogObjectParamsWithContext(ctx context.Context) *DeleteCatalogObjectParams {
	return &DeleteCatalogObjectParams{
		Context: ctx,
	}
}

// NewDeleteCatalogObjectParamsWithHTTPClient creates a new DeleteCatalogObjectParams object
// with the ability to set a custom HTTPClient for a request.
func NewDeleteCatalogObjectParamsWithHTTPClient(client *http.Client) *DeleteCatalogObjectParams {
	return &DeleteCatalogObjectParams{
		HTTPClient: client,
	}
}

/* DeleteCatalogObjectParams contains all the parameters to send to the API endpoint
   for the delete catalog object operation.

   Typically these are written to a http.Request.
*/
type DeleteCatalogObjectParams struct {

	/* ObjectID.

	     The ID of the catalog object to be deleted. When an object is deleted, other
	objects in the graph that depend on that object will be deleted as well (for example, deleting a
	catalog item will delete its catalog item variations).
	*/
	ObjectID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the delete catalog object params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *DeleteCatalogObjectParams) WithDefaults() *DeleteCatalogObjectParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the delete catalog object params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *DeleteCatalogObjectParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the delete catalog object params
func (o *DeleteCatalogObjectParams) WithTimeout(timeout time.Duration) *DeleteCatalogObjectParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the delete catalog object params
func (o *DeleteCatalogObjectParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the delete catalog object params
func (o *DeleteCatalogObjectParams) WithContext(ctx context.Context) *DeleteCatalogObjectParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the delete catalog object params
func (o *DeleteCatalogObjectParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the delete catalog object params
func (o *DeleteCatalogObjectParams) WithHTTPClient(client *http.Client) *DeleteCatalogObjectParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the delete catalog object params
func (o *DeleteCatalogObjectParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithObjectID adds the objectID to the delete catalog object params
func (o *DeleteCatalogObjectParams) WithObjectID(objectID string) *DeleteCatalogObjectParams {
	o.SetObjectID(objectID)
	return o
}

// SetObjectID adds the objectId to the delete catalog object params
func (o *DeleteCatalogObjectParams) SetObjectID(objectID string) {
	o.ObjectID = objectID
}

// WriteToRequest writes these params to a swagger request
func (o *DeleteCatalogObjectParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param object_id
	if err := r.SetPathParam("object_id", o.ObjectID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
