// Code generated by go-swagger; DO NOT EDIT.

package v1_items

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/jefflinse/square-connect/models"
)

// NewCreateItemParams creates a new CreateItemParams object
// with the default values initialized.
func NewCreateItemParams() *CreateItemParams {
	var ()
	return &CreateItemParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewCreateItemParamsWithTimeout creates a new CreateItemParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewCreateItemParamsWithTimeout(timeout time.Duration) *CreateItemParams {
	var ()
	return &CreateItemParams{

		timeout: timeout,
	}
}

// NewCreateItemParamsWithContext creates a new CreateItemParams object
// with the default values initialized, and the ability to set a context for a request
func NewCreateItemParamsWithContext(ctx context.Context) *CreateItemParams {
	var ()
	return &CreateItemParams{

		Context: ctx,
	}
}

// NewCreateItemParamsWithHTTPClient creates a new CreateItemParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewCreateItemParamsWithHTTPClient(client *http.Client) *CreateItemParams {
	var ()
	return &CreateItemParams{
		HTTPClient: client,
	}
}

/*CreateItemParams contains all the parameters to send to the API endpoint
for the create item operation typically these are written to a http.Request
*/
type CreateItemParams struct {

	/*Body
	  An object containing the fields to POST for the request.

	See the corresponding object definition for field details.

	*/
	Body *models.V1Item
	/*LocationID
	  The ID of the location to create an item for.

	*/
	LocationID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the create item params
func (o *CreateItemParams) WithTimeout(timeout time.Duration) *CreateItemParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the create item params
func (o *CreateItemParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the create item params
func (o *CreateItemParams) WithContext(ctx context.Context) *CreateItemParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the create item params
func (o *CreateItemParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the create item params
func (o *CreateItemParams) WithHTTPClient(client *http.Client) *CreateItemParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the create item params
func (o *CreateItemParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBody adds the body to the create item params
func (o *CreateItemParams) WithBody(body *models.V1Item) *CreateItemParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the create item params
func (o *CreateItemParams) SetBody(body *models.V1Item) {
	o.Body = body
}

// WithLocationID adds the locationID to the create item params
func (o *CreateItemParams) WithLocationID(locationID string) *CreateItemParams {
	o.SetLocationID(locationID)
	return o
}

// SetLocationID adds the locationId to the create item params
func (o *CreateItemParams) SetLocationID(locationID string) {
	o.LocationID = locationID
}

// WriteToRequest writes these params to a swagger request
func (o *CreateItemParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Body != nil {
		if err := r.SetBodyParam(o.Body); err != nil {
			return err
		}
	}

	// path param location_id
	if err := r.SetPathParam("location_id", o.LocationID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
