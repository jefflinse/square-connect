// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// V1ItemVisibility v1 item visibility
//
// swagger:model V1ItemVisibility
type V1ItemVisibility string

const (

	// V1ItemVisibilityPUBLIC captures enum value "PUBLIC"
	V1ItemVisibilityPUBLIC V1ItemVisibility = "PUBLIC"

	// V1ItemVisibilityPRIVATE captures enum value "PRIVATE"
	V1ItemVisibilityPRIVATE V1ItemVisibility = "PRIVATE"
)

// for schema
var v1ItemVisibilityEnum []interface{}

func init() {
	var res []V1ItemVisibility
	if err := json.Unmarshal([]byte(`["PUBLIC","PRIVATE"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		v1ItemVisibilityEnum = append(v1ItemVisibilityEnum, v)
	}
}

func (m V1ItemVisibility) validateV1ItemVisibilityEnum(path, location string, value V1ItemVisibility) error {
	if err := validate.Enum(path, location, value, v1ItemVisibilityEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this v1 item visibility
func (m V1ItemVisibility) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateV1ItemVisibilityEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
