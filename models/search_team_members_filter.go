// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// SearchTeamMembersFilter Represents a filter used in a search for `TeamMember` objects. `AND` logic is applied
// between the individual fields, and `OR` logic is applied within list-based fields.
// For example, setting this filter value,
// ```
// filter = (locations_ids = ["A", "B"], status = ACTIVE)
// ```
// returns only active team members assigned to either location "A" or "B".
//
// swagger:model SearchTeamMembersFilter
type SearchTeamMembersFilter struct {

	// When present, filter by team members assigned to the specified locations.
	// When empty, include team members assigned to any location.
	LocationIds []string `json:"location_ids"`

	// When present, filter by team members who match the given status.
	// When empty, include team members of all statuses.
	// See [TeamMemberStatus](#type-teammemberstatus) for possible values
	Status string `json:"status,omitempty"`
}

// Validate validates this search team members filter
func (m *SearchTeamMembersFilter) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *SearchTeamMembersFilter) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *SearchTeamMembersFilter) UnmarshalBinary(b []byte) error {
	var res SearchTeamMembersFilter
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
