// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// BusinessAppointmentSettingsCancellationPolicy The category of the sellerâ€™s cancellation policy.
//
// swagger:model BusinessAppointmentSettingsCancellationPolicy
type BusinessAppointmentSettingsCancellationPolicy string

const (

	// BusinessAppointmentSettingsCancellationPolicyCANCELLATIONTREATEDASNOSHOW captures enum value "CANCELLATION_TREATED_AS_NO_SHOW"
	BusinessAppointmentSettingsCancellationPolicyCANCELLATIONTREATEDASNOSHOW BusinessAppointmentSettingsCancellationPolicy = "CANCELLATION_TREATED_AS_NO_SHOW"

	// BusinessAppointmentSettingsCancellationPolicyCUSTOMPOLICY captures enum value "CUSTOM_POLICY"
	BusinessAppointmentSettingsCancellationPolicyCUSTOMPOLICY BusinessAppointmentSettingsCancellationPolicy = "CUSTOM_POLICY"
)

// for schema
var businessAppointmentSettingsCancellationPolicyEnum []interface{}

func init() {
	var res []BusinessAppointmentSettingsCancellationPolicy
	if err := json.Unmarshal([]byte(`["CANCELLATION_TREATED_AS_NO_SHOW","CUSTOM_POLICY"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		businessAppointmentSettingsCancellationPolicyEnum = append(businessAppointmentSettingsCancellationPolicyEnum, v)
	}
}

func (m BusinessAppointmentSettingsCancellationPolicy) validateBusinessAppointmentSettingsCancellationPolicyEnum(path, location string, value BusinessAppointmentSettingsCancellationPolicy) error {
	if err := validate.EnumCase(path, location, value, businessAppointmentSettingsCancellationPolicyEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this business appointment settings cancellation policy
func (m BusinessAppointmentSettingsCancellationPolicy) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateBusinessAppointmentSettingsCancellationPolicyEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this business appointment settings cancellation policy based on context it is used
func (m BusinessAppointmentSettingsCancellationPolicy) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
