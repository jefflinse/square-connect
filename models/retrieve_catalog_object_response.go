// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// RetrieveCatalogObjectResponse retrieve catalog object response
// Example: {"object":{"id":"W62UWFY35CWMYGVWK6TWJDNI","is_deleted":false,"item_data":{"category_id":"BJNQCF2FJ6S6UIDT65ABHLRX","description":"Hot Leaf Juice","name":"Tea","tax_ids":["HURXQOOAIC4IZSI2BEXQRYFY"],"variations":[{"id":"2TZFAOHWGG7PAK2QEXWYPZSP","is_deleted":false,"item_variation_data":{"item_id":"W62UWFY35CWMYGVWK6TWJDNI","name":"Mug","ordinal":0,"price_money":{"amount":150,"currency":"USD"},"pricing_type":"FIXED_PRICING"},"present_at_all_locations":true,"type":"ITEM_VARIATION","updated_at":"2016-11-16T22:25:24.878Z","version":1479335124878}]},"present_at_all_locations":true,"type":"ITEM","updated_at":"2016-11-16T22:25:24.878Z","version":1479335124878},"related_objects":[{"category_data":{"name":"Beverages"},"id":"BJNQCF2FJ6S6UIDT65ABHLRX","is_deleted":false,"present_at_all_locations":true,"type":"CATEGORY","updated_at":"2016-11-16T22:25:24.878Z","version":1479335124878},{"id":"HURXQOOAIC4IZSI2BEXQRYFY","is_deleted":false,"present_at_all_locations":true,"tax_data":{"calculation_phase":"TAX_SUBTOTAL_PHASE","enabled":true,"inclusion_type":"ADDITIVE","name":"Sales Tax","percentage":"5.0"},"type":"TAX","updated_at":"2016-11-16T22:25:24.878Z","version":1479335124878}]}
//
// swagger:model RetrieveCatalogObjectResponse
type RetrieveCatalogObjectResponse struct {

	// Any errors that occurred during the request.
	Errors []*Error `json:"errors"`

	// The `CatalogObject`s returned.
	Object *CatalogObject `json:"object,omitempty"`

	// A list of `CatalogObject`s referenced by the object in the `object` field.
	RelatedObjects []*CatalogObject `json:"related_objects"`
}

// Validate validates this retrieve catalog object response
func (m *RetrieveCatalogObjectResponse) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateErrors(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateObject(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateRelatedObjects(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *RetrieveCatalogObjectResponse) validateErrors(formats strfmt.Registry) error {
	if swag.IsZero(m.Errors) { // not required
		return nil
	}

	for i := 0; i < len(m.Errors); i++ {
		if swag.IsZero(m.Errors[i]) { // not required
			continue
		}

		if m.Errors[i] != nil {
			if err := m.Errors[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("errors" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *RetrieveCatalogObjectResponse) validateObject(formats strfmt.Registry) error {
	if swag.IsZero(m.Object) { // not required
		return nil
	}

	if m.Object != nil {
		if err := m.Object.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("object")
			}
			return err
		}
	}

	return nil
}

func (m *RetrieveCatalogObjectResponse) validateRelatedObjects(formats strfmt.Registry) error {
	if swag.IsZero(m.RelatedObjects) { // not required
		return nil
	}

	for i := 0; i < len(m.RelatedObjects); i++ {
		if swag.IsZero(m.RelatedObjects[i]) { // not required
			continue
		}

		if m.RelatedObjects[i] != nil {
			if err := m.RelatedObjects[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("related_objects" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this retrieve catalog object response based on the context it is used
func (m *RetrieveCatalogObjectResponse) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateErrors(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateObject(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateRelatedObjects(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *RetrieveCatalogObjectResponse) contextValidateErrors(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(m.Errors); i++ {

		if m.Errors[i] != nil {
			if err := m.Errors[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("errors" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *RetrieveCatalogObjectResponse) contextValidateObject(ctx context.Context, formats strfmt.Registry) error {

	if m.Object != nil {
		if err := m.Object.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("object")
			}
			return err
		}
	}

	return nil
}

func (m *RetrieveCatalogObjectResponse) contextValidateRelatedObjects(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(m.RelatedObjects); i++ {

		if m.RelatedObjects[i] != nil {
			if err := m.RelatedObjects[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("related_objects" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *RetrieveCatalogObjectResponse) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *RetrieveCatalogObjectResponse) UnmarshalBinary(b []byte) error {
	var res RetrieveCatalogObjectResponse
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
