// Code generated by go-swagger; DO NOT EDIT.

package team

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new team API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for team API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientOption is the option for Client methods
type ClientOption func(*runtime.ClientOperation)

// ClientService is the interface for Client methods
type ClientService interface {
	BulkCreateTeamMembers(params *BulkCreateTeamMembersParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*BulkCreateTeamMembersOK, error)

	BulkUpdateTeamMembers(params *BulkUpdateTeamMembersParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*BulkUpdateTeamMembersOK, error)

	CreateTeamMember(params *CreateTeamMemberParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*CreateTeamMemberOK, error)

	RetrieveTeamMember(params *RetrieveTeamMemberParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*RetrieveTeamMemberOK, error)

	RetrieveWageSetting(params *RetrieveWageSettingParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*RetrieveWageSettingOK, error)

	SearchTeamMembers(params *SearchTeamMembersParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*SearchTeamMembersOK, error)

	UpdateTeamMember(params *UpdateTeamMemberParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*UpdateTeamMemberOK, error)

	UpdateWageSetting(params *UpdateWageSettingParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*UpdateWageSettingOK, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
  BulkCreateTeamMembers bulks create team members

  Creates multiple `TeamMember` objects. The created `TeamMember` objects will be returned on successful creates.
This process is non-transactional and will process as much of the request as is possible. If one of the creates in
the request cannot be successfully processed, the request will NOT be marked as failed, but the body of the response
will contain explicit error information for this particular create.

Learn about [Troubleshooting the Teams API](/docs/team/troubleshooting#bulkcreateteammembers).
*/
func (a *Client) BulkCreateTeamMembers(params *BulkCreateTeamMembersParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*BulkCreateTeamMembersOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewBulkCreateTeamMembersParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "BulkCreateTeamMembers",
		Method:             "POST",
		PathPattern:        "/v2/team-members/bulk-create",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &BulkCreateTeamMembersReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*BulkCreateTeamMembersOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for BulkCreateTeamMembers: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  BulkUpdateTeamMembers bulks update team members

  Updates multiple `TeamMember` objects. The updated `TeamMember` objects will be returned on successful updates.
This process is non-transactional and will process as much of the request as is possible. If one of the updates in
the request cannot be successfully processed, the request will NOT be marked as failed, but the body of the response
will contain explicit error information for this particular update.
Learn about [Troubleshooting the Teams API](/docs/team/troubleshooting#bulkupdateteammembers).
*/
func (a *Client) BulkUpdateTeamMembers(params *BulkUpdateTeamMembersParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*BulkUpdateTeamMembersOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewBulkUpdateTeamMembersParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "BulkUpdateTeamMembers",
		Method:             "POST",
		PathPattern:        "/v2/team-members/bulk-update",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &BulkUpdateTeamMembersReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*BulkUpdateTeamMembersOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for BulkUpdateTeamMembers: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  CreateTeamMember creates team member

  Creates a single `TeamMember` object. The `TeamMember` will be returned on successful creates.
You must provide the following values in your request to this endpoint:
- `given_name`
- `family_name`

Learn about [Troubleshooting the Teams API](/docs/team/troubleshooting#createteammember).
*/
func (a *Client) CreateTeamMember(params *CreateTeamMemberParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*CreateTeamMemberOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCreateTeamMemberParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "CreateTeamMember",
		Method:             "POST",
		PathPattern:        "/v2/team-members",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CreateTeamMemberReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*CreateTeamMemberOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for CreateTeamMember: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  RetrieveTeamMember retrieves team member

  Retrieve a `TeamMember` object for the given `TeamMember.id`.
Learn about [Troubleshooting the Teams API](/docs/team/troubleshooting#retrieveteammember).
*/
func (a *Client) RetrieveTeamMember(params *RetrieveTeamMemberParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*RetrieveTeamMemberOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewRetrieveTeamMemberParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "RetrieveTeamMember",
		Method:             "GET",
		PathPattern:        "/v2/team-members/{team_member_id}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &RetrieveTeamMemberReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*RetrieveTeamMemberOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for RetrieveTeamMember: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  RetrieveWageSetting retrieves wage setting

  Retrieve a `WageSetting` object for a team member specified
by `TeamMember.id`.
Learn about [Troubleshooting the Teams API](/docs/team/troubleshooting#retrievewagesetting).
*/
func (a *Client) RetrieveWageSetting(params *RetrieveWageSettingParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*RetrieveWageSettingOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewRetrieveWageSettingParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "RetrieveWageSetting",
		Method:             "GET",
		PathPattern:        "/v2/team-members/{team_member_id}/wage-setting",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &RetrieveWageSettingReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*RetrieveWageSettingOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for RetrieveWageSetting: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  SearchTeamMembers searches team members

  Returns a paginated list of `TeamMember` objects for a business.
The list to be returned can be filtered by:
- location IDs **and**
- `status`
*/
func (a *Client) SearchTeamMembers(params *SearchTeamMembersParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*SearchTeamMembersOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewSearchTeamMembersParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "SearchTeamMembers",
		Method:             "POST",
		PathPattern:        "/v2/team-members/search",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &SearchTeamMembersReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*SearchTeamMembersOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for SearchTeamMembers: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  UpdateTeamMember updates team member

  Updates a single `TeamMember` object. The `TeamMember` will be returned on successful updates.
Learn about [Troubleshooting the Teams API](/docs/team/troubleshooting#updateteammember).
*/
func (a *Client) UpdateTeamMember(params *UpdateTeamMemberParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*UpdateTeamMemberOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewUpdateTeamMemberParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "UpdateTeamMember",
		Method:             "PUT",
		PathPattern:        "/v2/team-members/{team_member_id}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &UpdateTeamMemberReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*UpdateTeamMemberOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for UpdateTeamMember: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  UpdateWageSetting updates wage setting

  Creates or updates a `WageSetting` object. The object is created if a
`WageSetting` with the specified `team_member_id` does not exist. Otherwise,
it fully replaces the `WageSetting` object for the team member.
The `WageSetting` will be returned upon successful update.
Learn about [Troubleshooting the Teams API](/docs/team/troubleshooting#updatewagesetting).
*/
func (a *Client) UpdateWageSetting(params *UpdateWageSettingParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*UpdateWageSettingOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewUpdateWageSettingParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "UpdateWageSetting",
		Method:             "PUT",
		PathPattern:        "/v2/team-members/{team_member_id}/wage-setting",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &UpdateWageSettingReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*UpdateWageSettingOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for UpdateWageSetting: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
