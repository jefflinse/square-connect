// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// Weekday The days of the week.
//
// swagger:model Weekday
type Weekday string

const (

	// WeekdayMON captures enum value "MON"
	WeekdayMON Weekday = "MON"

	// WeekdayTUE captures enum value "TUE"
	WeekdayTUE Weekday = "TUE"

	// WeekdayWED captures enum value "WED"
	WeekdayWED Weekday = "WED"

	// WeekdayTHU captures enum value "THU"
	WeekdayTHU Weekday = "THU"

	// WeekdayFRI captures enum value "FRI"
	WeekdayFRI Weekday = "FRI"

	// WeekdaySAT captures enum value "SAT"
	WeekdaySAT Weekday = "SAT"

	// WeekdaySUN captures enum value "SUN"
	WeekdaySUN Weekday = "SUN"
)

// for schema
var weekdayEnum []interface{}

func init() {
	var res []Weekday
	if err := json.Unmarshal([]byte(`["MON","TUE","WED","THU","FRI","SAT","SUN"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		weekdayEnum = append(weekdayEnum, v)
	}
}

func (m Weekday) validateWeekdayEnum(path, location string, value Weekday) error {
	if err := validate.Enum(path, location, value, weekdayEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this weekday
func (m Weekday) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateWeekdayEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
