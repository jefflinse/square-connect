// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// ShiftWorkdayMatcher Defines the logic used to apply a workday filter.
//
// swagger:model ShiftWorkdayMatcher
type ShiftWorkdayMatcher string

const (

	// ShiftWorkdayMatcherSTARTAT captures enum value "START_AT"
	ShiftWorkdayMatcherSTARTAT ShiftWorkdayMatcher = "START_AT"

	// ShiftWorkdayMatcherENDAT captures enum value "END_AT"
	ShiftWorkdayMatcherENDAT ShiftWorkdayMatcher = "END_AT"

	// ShiftWorkdayMatcherINTERSECTION captures enum value "INTERSECTION"
	ShiftWorkdayMatcherINTERSECTION ShiftWorkdayMatcher = "INTERSECTION"
)

// for schema
var shiftWorkdayMatcherEnum []interface{}

func init() {
	var res []ShiftWorkdayMatcher
	if err := json.Unmarshal([]byte(`["START_AT","END_AT","INTERSECTION"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		shiftWorkdayMatcherEnum = append(shiftWorkdayMatcherEnum, v)
	}
}

func (m ShiftWorkdayMatcher) validateShiftWorkdayMatcherEnum(path, location string, value ShiftWorkdayMatcher) error {
	if err := validate.EnumCase(path, location, value, shiftWorkdayMatcherEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this shift workday matcher
func (m ShiftWorkdayMatcher) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateShiftWorkdayMatcherEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this shift workday matcher based on context it is used
func (m ShiftWorkdayMatcher) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
