// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// V1TenderType v1 tender type
//
// swagger:model V1TenderType
type V1TenderType string

const (

	// V1TenderTypeCREDITCARD captures enum value "CREDIT_CARD"
	V1TenderTypeCREDITCARD V1TenderType = "CREDIT_CARD"

	// V1TenderTypeCASH captures enum value "CASH"
	V1TenderTypeCASH V1TenderType = "CASH"

	// V1TenderTypeTHIRDPARTYCARD captures enum value "THIRD_PARTY_CARD"
	V1TenderTypeTHIRDPARTYCARD V1TenderType = "THIRD_PARTY_CARD"

	// V1TenderTypeNOSALE captures enum value "NO_SALE"
	V1TenderTypeNOSALE V1TenderType = "NO_SALE"

	// V1TenderTypeSQUAREWALLET captures enum value "SQUARE_WALLET"
	V1TenderTypeSQUAREWALLET V1TenderType = "SQUARE_WALLET"

	// V1TenderTypeSQUAREGIFTCARD captures enum value "SQUARE_GIFT_CARD"
	V1TenderTypeSQUAREGIFTCARD V1TenderType = "SQUARE_GIFT_CARD"

	// V1TenderTypeUNKNOWN captures enum value "UNKNOWN"
	V1TenderTypeUNKNOWN V1TenderType = "UNKNOWN"

	// V1TenderTypeOTHER captures enum value "OTHER"
	V1TenderTypeOTHER V1TenderType = "OTHER"
)

// for schema
var v1TenderTypeEnum []interface{}

func init() {
	var res []V1TenderType
	if err := json.Unmarshal([]byte(`["CREDIT_CARD","CASH","THIRD_PARTY_CARD","NO_SALE","SQUARE_WALLET","SQUARE_GIFT_CARD","UNKNOWN","OTHER"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		v1TenderTypeEnum = append(v1TenderTypeEnum, v)
	}
}

func (m V1TenderType) validateV1TenderTypeEnum(path, location string, value V1TenderType) error {
	if err := validate.Enum(path, location, value, v1TenderTypeEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this v1 tender type
func (m V1TenderType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateV1TenderTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
