// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// CatalogIDMapping A mapping between a temporary client-supplied ID and a permanent server-generated ID.
//
// When calling [UpsertCatalogObject](#endpoint-Catalog-UpsertCatalogObject) or
// [BatchUpsertCatalogObjects](#endpoint-Catalog-BatchUpsertCatalogObjects) to
// create a [CatalogObject](#type-CatalogObject) instance, you can supply
// a temporary ID for the to-be-created object, especially when the object is to be referenced
// elsewhere in the same request body. This temporary ID can be any string unique within
// the call, but must be prefixed by "#".
//
// After the request is sumbitted and the object created, a permanent server-generated ID is assigned
// to the new object. The permanent ID is unique across the Square catalog.
//
// swagger:model CatalogIdMapping
type CatalogIDMapping struct {

	// The client-supplied temporary `#`-prefixed ID for a new `CatalogObject`.
	ClientObjectID string `json:"client_object_id,omitempty"`

	// The permanent ID for the CatalogObject created by the server.
	ObjectID string `json:"object_id,omitempty"`
}

// Validate validates this catalog Id mapping
func (m *CatalogIDMapping) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *CatalogIDMapping) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CatalogIDMapping) UnmarshalBinary(b []byte) error {
	var res CatalogIDMapping
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
