// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// V1PhoneNumber Represents a phone number.
//
// swagger:model V1PhoneNumber
type V1PhoneNumber struct {

	// The phone number's international calling code. For US phone numbers, this value is +1.
	// Required: true
	CallingCode *string `json:"calling_code"`

	// The phone number.
	// Required: true
	Number *string `json:"number"`
}

// Validate validates this v1 phone number
func (m *V1PhoneNumber) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCallingCode(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateNumber(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *V1PhoneNumber) validateCallingCode(formats strfmt.Registry) error {

	if err := validate.Required("calling_code", "body", m.CallingCode); err != nil {
		return err
	}

	return nil
}

func (m *V1PhoneNumber) validateNumber(formats strfmt.Registry) error {

	if err := validate.Required("number", "body", m.Number); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this v1 phone number based on context it is used
func (m *V1PhoneNumber) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *V1PhoneNumber) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *V1PhoneNumber) UnmarshalBinary(b []byte) error {
	var res V1PhoneNumber
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
