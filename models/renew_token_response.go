// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// RenewTokenResponse renew token response
// Example: {"access_token":"ACCESS_TOKEN","expires_at":"2006-01-02T15:04:05Z","merchant_id":"MERCHANT_ID","token_type":"bearer"}
//
// swagger:model RenewTokenResponse
type RenewTokenResponse struct {

	// The renewed access token.
	// This value might be different from the `access_token` you provided in your request.
	// You provide this token in a header with every request to Connect API endpoints.
	// See [Request and response headers](https://developer.squareup.com/docs/api/connect/v2/#requestandresponseheaders) for the format of this header.
	AccessToken string `json:"access_token,omitempty"`

	// The date when access_token expires, in [ISO 8601](http://www.iso.org/iso/home/standards/iso8601.htm) format.
	ExpiresAt string `json:"expires_at,omitempty"`

	// The ID of the authorizing merchant's business.
	MerchantID string `json:"merchant_id,omitempty"`

	// __LEGACY FIELD__. The ID of the subscription plan the merchant signed
	// up for. Only present if the merchant signed up for a subscription during
	// authorization.
	PlanID string `json:"plan_id,omitempty"`

	// __LEGACY FIELD__. The ID of the merchant subscription associated with
	// the authorization. Only present if the merchant signed up for a subscription
	// during authorization..
	SubscriptionID string `json:"subscription_id,omitempty"`

	// This value is always _bearer_.
	TokenType string `json:"token_type,omitempty"`
}

// Validate validates this renew token response
func (m *RenewTokenResponse) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this renew token response based on context it is used
func (m *RenewTokenResponse) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *RenewTokenResponse) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *RenewTokenResponse) UnmarshalBinary(b []byte) error {
	var res RenewTokenResponse
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
