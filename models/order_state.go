// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// OrderState The state of the order.
//
// swagger:model OrderState
type OrderState string

const (

	// OrderStateOPEN captures enum value "OPEN"
	OrderStateOPEN OrderState = "OPEN"

	// OrderStateCOMPLETED captures enum value "COMPLETED"
	OrderStateCOMPLETED OrderState = "COMPLETED"

	// OrderStateCANCELED captures enum value "CANCELED"
	OrderStateCANCELED OrderState = "CANCELED"
)

// for schema
var orderStateEnum []interface{}

func init() {
	var res []OrderState
	if err := json.Unmarshal([]byte(`["OPEN","COMPLETED","CANCELED"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		orderStateEnum = append(orderStateEnum, v)
	}
}

func (m OrderState) validateOrderStateEnum(path, location string, value OrderState) error {
	if err := validate.EnumCase(path, location, value, orderStateEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this order state
func (m OrderState) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateOrderStateEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this order state based on context it is used
func (m OrderState) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
