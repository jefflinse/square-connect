// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// LoyaltyProgramRewardDefinitionScope Indicates the scope of the reward tier. DEPRECATED at version 2020-12-16. Discount details
// are now defined using a catalog pricing rule and other catalog objects. For more information, see
// [Get discount details for the reward](https://developer.squareup.com/docs/docs/loyalty-api/overview#get-discount-details).
//
// swagger:model LoyaltyProgramRewardDefinitionScope
type LoyaltyProgramRewardDefinitionScope string

const (

	// LoyaltyProgramRewardDefinitionScopeORDER captures enum value "ORDER"
	LoyaltyProgramRewardDefinitionScopeORDER LoyaltyProgramRewardDefinitionScope = "ORDER"

	// LoyaltyProgramRewardDefinitionScopeITEMVARIATION captures enum value "ITEM_VARIATION"
	LoyaltyProgramRewardDefinitionScopeITEMVARIATION LoyaltyProgramRewardDefinitionScope = "ITEM_VARIATION"

	// LoyaltyProgramRewardDefinitionScopeCATEGORY captures enum value "CATEGORY"
	LoyaltyProgramRewardDefinitionScopeCATEGORY LoyaltyProgramRewardDefinitionScope = "CATEGORY"
)

// for schema
var loyaltyProgramRewardDefinitionScopeEnum []interface{}

func init() {
	var res []LoyaltyProgramRewardDefinitionScope
	if err := json.Unmarshal([]byte(`["ORDER","ITEM_VARIATION","CATEGORY"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		loyaltyProgramRewardDefinitionScopeEnum = append(loyaltyProgramRewardDefinitionScopeEnum, v)
	}
}

func (m LoyaltyProgramRewardDefinitionScope) validateLoyaltyProgramRewardDefinitionScopeEnum(path, location string, value LoyaltyProgramRewardDefinitionScope) error {
	if err := validate.EnumCase(path, location, value, loyaltyProgramRewardDefinitionScopeEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this loyalty program reward definition scope
func (m LoyaltyProgramRewardDefinitionScope) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateLoyaltyProgramRewardDefinitionScopeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this loyalty program reward definition scope based on context it is used
func (m LoyaltyProgramRewardDefinitionScope) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
