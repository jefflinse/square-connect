// Code generated by go-swagger; DO NOT EDIT.

package v1_employees

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewV1ListCashDrawerShiftsParams creates a new V1ListCashDrawerShiftsParams object
// with the default values initialized.
func NewV1ListCashDrawerShiftsParams() *V1ListCashDrawerShiftsParams {
	var ()
	return &V1ListCashDrawerShiftsParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewV1ListCashDrawerShiftsParamsWithTimeout creates a new V1ListCashDrawerShiftsParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewV1ListCashDrawerShiftsParamsWithTimeout(timeout time.Duration) *V1ListCashDrawerShiftsParams {
	var ()
	return &V1ListCashDrawerShiftsParams{

		timeout: timeout,
	}
}

// NewV1ListCashDrawerShiftsParamsWithContext creates a new V1ListCashDrawerShiftsParams object
// with the default values initialized, and the ability to set a context for a request
func NewV1ListCashDrawerShiftsParamsWithContext(ctx context.Context) *V1ListCashDrawerShiftsParams {
	var ()
	return &V1ListCashDrawerShiftsParams{

		Context: ctx,
	}
}

// NewV1ListCashDrawerShiftsParamsWithHTTPClient creates a new V1ListCashDrawerShiftsParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewV1ListCashDrawerShiftsParamsWithHTTPClient(client *http.Client) *V1ListCashDrawerShiftsParams {
	var ()
	return &V1ListCashDrawerShiftsParams{
		HTTPClient: client,
	}
}

/*V1ListCashDrawerShiftsParams contains all the parameters to send to the API endpoint
for the v1 list cash drawer shifts operation typically these are written to a http.Request
*/
type V1ListCashDrawerShiftsParams struct {

	/*BeginTime
	  The beginning of the requested reporting period, in ISO 8601 format. Default value: The current time minus 90 days.

	*/
	BeginTime *string
	/*EndTime
	  The beginning of the requested reporting period, in ISO 8601 format. Default value: The current time.

	*/
	EndTime *string
	/*LocationID
	  The ID of the location to list cash drawer shifts for.

	*/
	LocationID string
	/*Order
	  The order in which cash drawer shifts are listed in the response, based on their created_at field. Default value: ASC

	*/
	Order *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the v1 list cash drawer shifts params
func (o *V1ListCashDrawerShiftsParams) WithTimeout(timeout time.Duration) *V1ListCashDrawerShiftsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the v1 list cash drawer shifts params
func (o *V1ListCashDrawerShiftsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the v1 list cash drawer shifts params
func (o *V1ListCashDrawerShiftsParams) WithContext(ctx context.Context) *V1ListCashDrawerShiftsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the v1 list cash drawer shifts params
func (o *V1ListCashDrawerShiftsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the v1 list cash drawer shifts params
func (o *V1ListCashDrawerShiftsParams) WithHTTPClient(client *http.Client) *V1ListCashDrawerShiftsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the v1 list cash drawer shifts params
func (o *V1ListCashDrawerShiftsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBeginTime adds the beginTime to the v1 list cash drawer shifts params
func (o *V1ListCashDrawerShiftsParams) WithBeginTime(beginTime *string) *V1ListCashDrawerShiftsParams {
	o.SetBeginTime(beginTime)
	return o
}

// SetBeginTime adds the beginTime to the v1 list cash drawer shifts params
func (o *V1ListCashDrawerShiftsParams) SetBeginTime(beginTime *string) {
	o.BeginTime = beginTime
}

// WithEndTime adds the endTime to the v1 list cash drawer shifts params
func (o *V1ListCashDrawerShiftsParams) WithEndTime(endTime *string) *V1ListCashDrawerShiftsParams {
	o.SetEndTime(endTime)
	return o
}

// SetEndTime adds the endTime to the v1 list cash drawer shifts params
func (o *V1ListCashDrawerShiftsParams) SetEndTime(endTime *string) {
	o.EndTime = endTime
}

// WithLocationID adds the locationID to the v1 list cash drawer shifts params
func (o *V1ListCashDrawerShiftsParams) WithLocationID(locationID string) *V1ListCashDrawerShiftsParams {
	o.SetLocationID(locationID)
	return o
}

// SetLocationID adds the locationId to the v1 list cash drawer shifts params
func (o *V1ListCashDrawerShiftsParams) SetLocationID(locationID string) {
	o.LocationID = locationID
}

// WithOrder adds the order to the v1 list cash drawer shifts params
func (o *V1ListCashDrawerShiftsParams) WithOrder(order *string) *V1ListCashDrawerShiftsParams {
	o.SetOrder(order)
	return o
}

// SetOrder adds the order to the v1 list cash drawer shifts params
func (o *V1ListCashDrawerShiftsParams) SetOrder(order *string) {
	o.Order = order
}

// WriteToRequest writes these params to a swagger request
func (o *V1ListCashDrawerShiftsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.BeginTime != nil {

		// query param begin_time
		var qrBeginTime string
		if o.BeginTime != nil {
			qrBeginTime = *o.BeginTime
		}
		qBeginTime := qrBeginTime
		if qBeginTime != "" {
			if err := r.SetQueryParam("begin_time", qBeginTime); err != nil {
				return err
			}
		}

	}

	if o.EndTime != nil {

		// query param end_time
		var qrEndTime string
		if o.EndTime != nil {
			qrEndTime = *o.EndTime
		}
		qEndTime := qrEndTime
		if qEndTime != "" {
			if err := r.SetQueryParam("end_time", qEndTime); err != nil {
				return err
			}
		}

	}

	// path param location_id
	if err := r.SetPathParam("location_id", o.LocationID); err != nil {
		return err
	}

	if o.Order != nil {

		// query param order
		var qrOrder string
		if o.Order != nil {
			qrOrder = *o.Order
		}
		qOrder := qrOrder
		if qOrder != "" {
			if err := r.SetQueryParam("order", qOrder); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
