// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// SearchCustomersRequest Defines the fields included in the request body for the
// SearchCustomers endpoint.
//
// swagger:model SearchCustomersRequest
type SearchCustomersRequest struct {

	// Include the pagination cursor in subsequent calls to this endpoint to retrieve
	// the next set of results associated with the original query.
	//
	// See the [Pagination guide](https://developer.squareup.com/docs/working-with-apis/pagination) for more information.
	Cursor string `json:"cursor,omitempty"`

	// A limit on the number of results to be returned in a single page.
	// The limit is advisory - the implementation may return more or fewer results.
	// If the supplied limit is negative, zero, or is higher than the maximum limit
	// of 100, it will be ignored.
	Limit int64 `json:"limit,omitempty"`

	// Query customers based on the given conditions and sort order.
	// Calling SearchCustomers without an explicit query parameter will return
	// all customers ordered alphabetically based on `given_name` and
	// `family_name`.
	Query *CustomerQuery `json:"query,omitempty"`
}

// Validate validates this search customers request
func (m *SearchCustomersRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateQuery(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *SearchCustomersRequest) validateQuery(formats strfmt.Registry) error {

	if swag.IsZero(m.Query) { // not required
		return nil
	}

	if m.Query != nil {
		if err := m.Query.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("query")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *SearchCustomersRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *SearchCustomersRequest) UnmarshalBinary(b []byte) error {
	var res SearchCustomersRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
