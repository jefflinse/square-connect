// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// CatalogCustomAttributeDefinitionType Defines the possible types for a custom attribute.
//
// swagger:model CatalogCustomAttributeDefinitionType
type CatalogCustomAttributeDefinitionType string

const (

	// CatalogCustomAttributeDefinitionTypeSTRING captures enum value "STRING"
	CatalogCustomAttributeDefinitionTypeSTRING CatalogCustomAttributeDefinitionType = "STRING"

	// CatalogCustomAttributeDefinitionTypeBOOLEAN captures enum value "BOOLEAN"
	CatalogCustomAttributeDefinitionTypeBOOLEAN CatalogCustomAttributeDefinitionType = "BOOLEAN"

	// CatalogCustomAttributeDefinitionTypeNUMBER captures enum value "NUMBER"
	CatalogCustomAttributeDefinitionTypeNUMBER CatalogCustomAttributeDefinitionType = "NUMBER"

	// CatalogCustomAttributeDefinitionTypeSELECTION captures enum value "SELECTION"
	CatalogCustomAttributeDefinitionTypeSELECTION CatalogCustomAttributeDefinitionType = "SELECTION"
)

// for schema
var catalogCustomAttributeDefinitionTypeEnum []interface{}

func init() {
	var res []CatalogCustomAttributeDefinitionType
	if err := json.Unmarshal([]byte(`["STRING","BOOLEAN","NUMBER","SELECTION"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		catalogCustomAttributeDefinitionTypeEnum = append(catalogCustomAttributeDefinitionTypeEnum, v)
	}
}

func (m CatalogCustomAttributeDefinitionType) validateCatalogCustomAttributeDefinitionTypeEnum(path, location string, value CatalogCustomAttributeDefinitionType) error {
	if err := validate.EnumCase(path, location, value, catalogCustomAttributeDefinitionTypeEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this catalog custom attribute definition type
func (m CatalogCustomAttributeDefinitionType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateCatalogCustomAttributeDefinitionTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this catalog custom attribute definition type based on context it is used
func (m CatalogCustomAttributeDefinitionType) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
